{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-10-15-antv-gatsby-theme-antv-site-templates-document-tsx","path":"/zh/docs/manual/advanced/keyconcept/graphics-group","result":{"data":{"site":{"siteMetadata":{"title":"G6","githubUrl":"https://github.com/antvis/g6","docs":[{"slug":"manual/FAQ","title":{"zh":"FAQ","en":"FAQ"},"order":2},{"slug":"manual/tutorial","title":{"zh":"入门教程","en":"Tutorial"},"order":3},{"slug":"manual/middle","title":{"zh":"核心概念","en":"Key Concepts"},"order":4},{"slug":"manual/middle/keyconcept","title":{"zh":"关键名词解释","en":"Middle Guides"},"order":2},{"slug":"manual/middle/states","title":{"zh":"交互与事件","en":"Behavior & Event"},"order":4},{"slug":"manual/middle/elements","title":{"zh":"节点与边","en":"Graph Element"},"order":3},{"slug":"manual/middle/elements/nodes","title":{"zh":"内置节点","en":"Default Node"},"order":2},{"slug":"manual/middle/elements/edges","title":{"zh":"内置边","en":"Default Edge"},"order":3},{"slug":"manual/advanced","title":{"zh":"高级指引","en":"Advanced"},"order":5},{"slug":"manual/advanced/keyconcept","title":{"zh":"关键概念","en":"Key Concepts"},"order":1},{"slug":"manual/cases","title":{"zh":"综合应用","en":"Cases"},"order":6},{"slug":"api","title":{"zh":"API 文档","en":"API Doc"},"order":null},{"slug":"api/nodeEdge","title":{"zh":"节点和边","en":"Node & Edge"},"order":4},{"slug":"api/layout","title":{"zh":"Layout","en":"Layout"},"order":5}]},"pathPrefix":""},"markdownRemark":{"html":"<p><span style=\"background-color: rgb(251, 233, 231); color: rgb(139, 53, 56)\">   <strong>⚠️注意:</strong></span>\n<br />图形分组 Group 与 <a href=\"/zh/docs/manual/middle/nodeGroup\">节点分组 Group</a> 虽然都名为 Group，但属于不同层次的概念。</p>\n<ul>\n<li>图形分组针对 <a href=\"/zh/docs/manual/middle/keyconcept/shape-keyshape\">图形 Shape</a> 层次的分组；</li>\n<li><a href=\"/zh/docs/manual/middle/nodeGroup\">节点分组 Group</a> 是针对 <a href=\"/zh/docs/manual/middle/elements/nodes/defaultNode\">节点</a> 的分组，与数据结构中的层次、分组对应。</li>\n</ul>\n<br />\n<h2 id=\"什么是图形分组-group\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E5%9B%BE%E5%BD%A2%E5%88%86%E7%BB%84-group\" aria-label=\"什么是图形分组 group permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是图形分组 Group</h2>\n<p>图形分组 group 类似于 <a href='https://developer.mozilla.org/zh-CN/docs/Web/SVG/Element/g' target='_blank'>SVG 中的 <code class=\"language-text\">&lt;g&gt;</code> 标签</a>：元素 <code class=\"language-text\">g</code> 是用来组合图形对象的容器。在 group 上添加变换（例如剪裁、旋转、放缩、平移等）会应用到其所有的子元素上。在 group 上添加属性（例如颜色、位置等）会被其所有的子元素继承。此外， group 可以多层嵌套使用，因此可以用来定义复杂的对象。</p>\n<p>在 G6 中，Graph 的一个实例中的所有节点属于同一个变量名为 <code class=\"language-text\">nodeGroup</code> 的 group，所有的边属于同一个变量名为 <code class=\"language-text\">edgeGroup</code> 的 group。节点 group 在视觉上的层级（zIndex）高于边 group，即所有节点会绘制在所有边的上层。<br />如下图（左）三个节点属于 <code class=\"language-text\">nodeGroup</code>  ，两条边属于 <code class=\"language-text\">edgeGroup</code> ， <code class=\"language-text\">nodeGroup</code> 层级高于 <code class=\"language-text\">edgeGroup</code> ，三个节点绘制在两条边的上层。下图（右）是（左）图的节点降低透明度后的效果，可以更清晰看到边绘制在节点下方。<br /></p>\n<p><img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*oqKUSoRWMrcAAAAAAAAAAABkARQnAQ\" alt=\"image.png\"><img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*cudnTqD-g_4AAAAAAAAAAABkARQnAQ\" alt=\"image.png\"></p>\n<blockquote>\n<p>（左）节点和边的图形分组 Group 演示。（右）给左图的节点降低了透明度。</p>\n</blockquote>\n<h2 id=\"何时使用图形分组-group\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%88%86%E7%BB%84-group\" aria-label=\"何时使用图形分组 group permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用图形分组 Group</h2>\n<p><a href=\"/zh/docs/manual/advanced/custom-node\">自定义节点</a>、<a href=\"/zh/docs/manual/advanced/custom-edge\">自定义边</a>时将会涉及到图形分组 Group 的概念。图形分组 Group 方便了用户对节点或边上元素的组合和管理。<br />例如，如下图中的节点 A 有一个包含节点 A 中所有图形的 group，该 group 中包含了一个 circle 图形和一个文本图形。节点 B 是一个自定义节点，有一个包含节点 B 中所有图形的 group，该 group 包含了 circle 图形、rect 图形、文本图形。<br /></p>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*GnVoSIGkXhsAAAAAAAAAAABkARQnAQ' alt='img' width='100'/>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*iQXZTZCX9LEAAAAAAAAAAABkARQnAQ' alt='img' width='100'/>\n<br />\n<h2 id=\"如何使用图形分组-group\"><a href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%88%86%E7%BB%84-group\" aria-label=\"如何使用图形分组 group permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>如何使用图形分组 Group</h2>\n<p>以下方法将会在<a href=\"/zh/docs/manual/advanced/custom-node\">自定义节点</a>、<a href=\"/zh/docs/manual/advanced/custom-edge\">自定义边</a>时用到。</p>\n<h3 id=\"声明实例\"><a href=\"#%E5%A3%B0%E6%98%8E%E5%AE%9E%E4%BE%8B\" aria-label=\"声明实例 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>声明实例</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const group = new Group(cfgs);</code></pre></div>\n<h3 id=\"实例方法\"><a href=\"#%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95\" aria-label=\"实例方法 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实例方法</h3>\n<ul>\n<li>addGroup(cfgs)</li>\n</ul>\n<p>向分组中添加新的分组。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> subGroup <span class=\"token operator\">=</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">addGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<ul>\n<li>addShape(type, cfgs)</li>\n</ul>\n<p>向分组中添加新的图形。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> keyShape <span class=\"token operator\">=</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  attrs<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    stroke<span class=\"token punctuation\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>提示：在分组上添加的 <code class=\"language-text\">clip</code>， <code class=\"language-text\">transform</code> 等会影响到该分组中的所有元素（子分组或图形）。</p>","tableOfContents":"<ul>\n<li><a href=\"/zh/docs/manual/advanced/keyconcept/graphics-group/#%E4%BB%80%E4%B9%88%E6%98%AF%E5%9B%BE%E5%BD%A2%E5%88%86%E7%BB%84-group\">什么是图形分组 Group</a></li>\n<li><a href=\"/zh/docs/manual/advanced/keyconcept/graphics-group/#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%88%86%E7%BB%84-group\">何时使用图形分组 Group</a></li>\n<li>\n<p><a href=\"/zh/docs/manual/advanced/keyconcept/graphics-group/#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%88%86%E7%BB%84-group\">如何使用图形分组 Group</a></p>\n<ul>\n<li><a href=\"/zh/docs/manual/advanced/keyconcept/graphics-group/#%E5%A3%B0%E6%98%8E%E5%AE%9E%E4%BE%8B\">声明实例</a></li>\n<li><a href=\"/zh/docs/manual/advanced/keyconcept/graphics-group/#%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95\">实例方法</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/zh/docs/manual/advanced/keyconcept/graphics-group","readingTime":{"text":"1 min read","time":46200}},"frontmatter":{"title":"图形分组 Group"},"parent":{"relativePath":"manual/advanced/keyconcept/graphics-group.zh.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/zh/docs/manual/introduction"},"frontmatter":{"title":"简介","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/introduction"},"frontmatter":{"title":"Introduction","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/preface"},"frontmatter":{"title":"Preface","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/preface"},"frontmatter":{"title":"前言","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/layout/Layout"},"frontmatter":{"title":"Layout","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/layout/Layout"},"frontmatter":{"title":"Layout","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/nodeEdge/Item"},"frontmatter":{"title":"Item","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/keyconcept/shape-keyshape"},"frontmatter":{"title":"Graphics Shape and KeyShape","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/keyconcept/shape-keyshape"},"frontmatter":{"title":"图形 Shape 与 keyShape","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/updateText"},"frontmatter":{"title":"Update Label","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/updateText"},"frontmatter":{"title":"如何更新文本样式","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/nodeEdge/Item"},"frontmatter":{"title":"Item","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/cases/sequenceTime"},"frontmatter":{"title":"Dynamic Relationship Analysis Powered by G6","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/cases/sequenceTime"},"frontmatter":{"title":"基于 G6 的关系时序分析应用","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/defaultEdge"},"frontmatter":{"title":"Built-in Edges","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/defaultEdge"},"frontmatter":{"title":"内置边总览","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/defaultNode"},"frontmatter":{"title":"Built-in Nodes","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/defaultNode"},"frontmatter":{"title":"内置节点总览","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/keyconcept/shape-and-properties"},"frontmatter":{"title":"Graphics Shape Properties","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/keyconcept/shape-and-properties"},"frontmatter":{"title":"图形 Shape 及其属性","order":0}}},{"node":{"fields":{"slug":"/zh/examples/tool/tooltip"},"frontmatter":{"title":"提示框","order":0}}},{"node":{"fields":{"slug":"/en/examples/tool/tooltip"},"frontmatter":{"title":"Tooltip","order":0}}},{"node":{"fields":{"slug":"/en/examples/tree/compactBox"},"frontmatter":{"title":"CompactBox","order":0}}},{"node":{"fields":{"slug":"/zh/examples/tree/compactBox"},"frontmatter":{"title":"紧凑树","order":0}}},{"node":{"fields":{"slug":"/en/examples/scatter/node"},"frontmatter":{"title":"Node Animation","order":0}}},{"node":{"fields":{"slug":"/zh/examples/scatter/node"},"frontmatter":{"title":"节点动画","order":0}}},{"node":{"fields":{"slug":"/zh/examples/interaction/highlight"},"frontmatter":{"title":"高亮相邻节点","order":0}}},{"node":{"fields":{"slug":"/en/examples/interaction/highlight"},"frontmatter":{"title":"Highlight Nodes","order":0}}},{"node":{"fields":{"slug":"/en/examples/case/metroLines"},"frontmatter":{"title":"Animated Metro Map","order":0}}},{"node":{"fields":{"slug":"/zh/examples/case/metroLines"},"frontmatter":{"title":"地铁线路图","order":0}}},{"node":{"fields":{"slug":"/en/examples/case/decisionBubbles"},"frontmatter":{"title":"Visualization Decision","order":0}}},{"node":{"fields":{"slug":"/zh/examples/case/decisionBubbles"},"frontmatter":{"title":"图表决策","order":0}}},{"node":{"fields":{"slug":"/en/examples/net/forceDirected"},"frontmatter":{"title":"Force-directed Layout","order":0}}},{"node":{"fields":{"slug":"/zh/examples/net/forceDirected"},"frontmatter":{"title":"力导向图布局","order":0}}},{"node":{"fields":{"slug":"/zh/examples/shape/basic"},"frontmatter":{"title":"内置节点","order":0}}},{"node":{"fields":{"slug":"/en/examples/shape/basic"},"frontmatter":{"title":"Built-in Nodes","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/getting-started"},"frontmatter":{"title":"快速上手","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/getting-started"},"frontmatter":{"title":"Getting Started","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/graph"},"frontmatter":{"title":"Graph","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/graph"},"frontmatter":{"title":"图 Graph","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/nodeEdge/Edge"},"frontmatter":{"title":"Edge","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/nodeEdge/Edge"},"frontmatter":{"title":"Edge","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/nodeEdge/Node"},"frontmatter":{"title":"Node","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/keyconcept/anchorpoint"},"frontmatter":{"title":"节点的连接点 anchorPoint","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/keyconcept/anchorpoint"},"frontmatter":{"title":"AnchorPoint","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/nodeEdge/Node"},"frontmatter":{"title":"Node","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/bindEvent"},"frontmatter":{"title":"监听和绑定事件","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/states/bindEvent"},"frontmatter":{"title":"Listener and Event","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/cases/relations"},"frontmatter":{"title":"Relationship Analysis Powered by G6","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/cases/relations"},"frontmatter":{"title":"基于 G6 的图分析应用","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/updateElement"},"frontmatter":{"title":"Update Item's Style","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/updateElement"},"frontmatter":{"title":"如何更新节点或边的样式","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/line"},"frontmatter":{"title":"Line","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/line"},"frontmatter":{"title":"Line","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/circle"},"frontmatter":{"title":"Circle","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/circle"},"frontmatter":{"title":"Circle","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/keyconcept/graphics-group"},"frontmatter":{"title":"Graphics Group","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/keyconcept/graphics-group"},"frontmatter":{"title":"图形分组 Group","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/example"},"frontmatter":{"title":"绘制 Tutorial 案例","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/example"},"frontmatter":{"title":"Render the Tutorial Demo","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/Graph"},"frontmatter":{"title":"Graph","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/Graph"},"frontmatter":{"title":"Graph","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/layout/Graph"},"frontmatter":{"title":"Graph Layout","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/layout/Graph"},"frontmatter":{"title":"Graph Layout","order":1}}},{"node":{"fields":{"slug":"/en/examples/tree/dendrogram"},"frontmatter":{"title":"Dendrogram","order":1}}},{"node":{"fields":{"slug":"/zh/examples/tree/dendrogram"},"frontmatter":{"title":"生态树","order":1}}},{"node":{"fields":{"slug":"/zh/examples/shape/defaultEdges"},"frontmatter":{"title":"内置边","order":1}}},{"node":{"fields":{"slug":"/en/examples/shape/defaultEdges"},"frontmatter":{"title":"Built-in Edges","order":1}}},{"node":{"fields":{"slug":"/en/examples/interaction/loadData"},"frontmatter":{"title":"Onload Multiple Data","order":1}}},{"node":{"fields":{"slug":"/zh/examples/interaction/loadData"},"frontmatter":{"title":"动态加载多条数据","order":1}}},{"node":{"fields":{"slug":"/zh/examples/case/simplifyCluster"},"frontmatter":{"title":"聚类的折叠/扩展","order":1}}},{"node":{"fields":{"slug":"/en/examples/case/simplifyCluster"},"frontmatter":{"title":"Collapse/Expand Cluster","order":1}}},{"node":{"fields":{"slug":"/en/examples/net/dagreFlow"},"frontmatter":{"title":"Dagre Layout","order":1}}},{"node":{"fields":{"slug":"/zh/examples/net/dagreFlow"},"frontmatter":{"title":"Dagre 流程图布局","order":1}}},{"node":{"fields":{"slug":"/zh/examples/scatter/edge"},"frontmatter":{"title":"边动画","order":1}}},{"node":{"fields":{"slug":"/en/examples/scatter/edge"},"frontmatter":{"title":"Edge Animation","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/polyline"},"frontmatter":{"title":"Polyline","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/polyline"},"frontmatter":{"title":"Polyline","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/rect"},"frontmatter":{"title":"Rect","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/rect"},"frontmatter":{"title":"Rect","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/TreeGraph"},"frontmatter":{"title":"TreeGraph","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/TreeGraph"},"frontmatter":{"title":"TreeGraph","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/elements"},"frontmatter":{"title":"Configure the Items","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/elements"},"frontmatter":{"title":"元素及其配置","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/layout/TreeGraph"},"frontmatter":{"title":"TreeGraph","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/layout/TreeGraph"},"frontmatter":{"title":"TreeGraph","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/cases/edgeBundling"},"frontmatter":{"title":"Edge Bundling","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/cases/edgeBundling"},"frontmatter":{"title":"Edge Bundling","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-node"},"frontmatter":{"title":"Custom Node","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/custom-node"},"frontmatter":{"title":"自定义节点","order":2}}},{"node":{"fields":{"slug":"/en/examples/tree/mindmap"},"frontmatter":{"title":"Mindmap","order":2}}},{"node":{"fields":{"slug":"/zh/examples/tree/mindmap"},"frontmatter":{"title":"脑图树","order":2}}},{"node":{"fields":{"slug":"/en/examples/scatter/stateChange"},"frontmatter":{"title":"State Switch","order":2}}},{"node":{"fields":{"slug":"/zh/examples/scatter/stateChange"},"frontmatter":{"title":"状态切换","order":2}}},{"node":{"fields":{"slug":"/zh/examples/interaction/label"},"frontmatter":{"title":"改变标签或背景","order":2}}},{"node":{"fields":{"slug":"/en/examples/interaction/label"},"frontmatter":{"title":"Label and Background Updating","order":2}}},{"node":{"fields":{"slug":"/zh/examples/case/customFlow"},"frontmatter":{"title":"自定义流向图","order":2}}},{"node":{"fields":{"slug":"/en/examples/case/customFlow"},"frontmatter":{"title":"Custom Fow Graph","order":2}}},{"node":{"fields":{"slug":"/zh/examples/net/furchtermanLayout"},"frontmatter":{"title":"Fruchterman 图布局","order":2}}},{"node":{"fields":{"slug":"/en/examples/net/furchtermanLayout"},"frontmatter":{"title":"Fruchterman Layout","order":2}}},{"node":{"fields":{"slug":"/zh/examples/shape/customNode"},"frontmatter":{"title":"自定义节点","order":2}}},{"node":{"fields":{"slug":"/en/examples/shape/customNode"},"frontmatter":{"title":"Custom Node","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/layout"},"frontmatter":{"title":"Utilizing Layout","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/layout"},"frontmatter":{"title":"使用图布局 Layout","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/supportIE"},"frontmatter":{"title":"如何让 IE 支持 G6","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/supportIE"},"frontmatter":{"title":"Use G6 with IE","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-edge"},"frontmatter":{"title":"Custom Edge","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/custom-edge"},"frontmatter":{"title":"自定义边","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/quaratic"},"frontmatter":{"title":"Quadratic","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/ellipse"},"frontmatter":{"title":"Ellipse","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/ellipse"},"frontmatter":{"title":"Ellipse","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/quaratic"},"frontmatter":{"title":"Quadratic","order":3}}},{"node":{"fields":{"slug":"/en/examples/tree/indented"},"frontmatter":{"title":"Indented","order":3}}},{"node":{"fields":{"slug":"/zh/examples/tree/indented"},"frontmatter":{"title":"缩进树","order":3}}},{"node":{"fields":{"slug":"/en/examples/net/radialLayout"},"frontmatter":{"title":"Radial Layout","order":3}}},{"node":{"fields":{"slug":"/zh/examples/net/radialLayout"},"frontmatter":{"title":"Radial 辐射布局","order":3}}},{"node":{"fields":{"slug":"/zh/examples/interaction/nodeGroup"},"frontmatter":{"title":"节点分组","order":3}}},{"node":{"fields":{"slug":"/en/examples/interaction/nodeGroup"},"frontmatter":{"title":"Node Group","order":3}}},{"node":{"fields":{"slug":"/zh/examples/shape/customEdge"},"frontmatter":{"title":"自定义边","order":3}}},{"node":{"fields":{"slug":"/en/examples/shape/customEdge"},"frontmatter":{"title":"Custom Edge","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/elementIndex"},"frontmatter":{"title":"The Visual Level of Node and Edge","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/elementIndex"},"frontmatter":{"title":"节点与边的层级","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/multi-line"},"frontmatter":{"title":"Multiple Edges between Two Nodes","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/multi-line"},"frontmatter":{"title":"两节点间存在多条边","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/cubic"},"frontmatter":{"title":"Cubic","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/cubic"},"frontmatter":{"title":"Cubic","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/diamond"},"frontmatter":{"title":"Diamond","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/diamond"},"frontmatter":{"title":"Diamond","order":4}}},{"node":{"fields":{"slug":"/en/docs/api/shapeProperties"},"frontmatter":{"title":"Shape Properties","order":4}}},{"node":{"fields":{"slug":"/zh/docs/api/shapeProperties"},"frontmatter":{"title":"各图形属性","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/behavior"},"frontmatter":{"title":"Interaction Behavior","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/behavior"},"frontmatter":{"title":"图的交互 Behavior","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/states/defaultBehavior"},"frontmatter":{"title":"Built-in Behavior","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/defaultBehavior"},"frontmatter":{"title":"内置的 Behavior","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-layout"},"frontmatter":{"title":"Custom Layout","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/custom-layout"},"frontmatter":{"title":"自定义布局 Layout","order":4}}},{"node":{"fields":{"slug":"/zh/examples/tree/radialtree"},"frontmatter":{"title":"辐射树","order":4}}},{"node":{"fields":{"slug":"/en/examples/tree/radialtree"},"frontmatter":{"title":"Radial Tree","order":4}}},{"node":{"fields":{"slug":"/zh/examples/shape/label"},"frontmatter":{"title":"超长文本","order":4}}},{"node":{"fields":{"slug":"/en/examples/shape/label"},"frontmatter":{"title":"Long Label","order":4}}},{"node":{"fields":{"slug":"/en/examples/interaction/partialResponse"},"frontmatter":{"title":"Region Response","order":4}}},{"node":{"fields":{"slug":"/zh/examples/interaction/partialResponse"},"frontmatter":{"title":"响应区域事件","order":4}}},{"node":{"fields":{"slug":"/zh/examples/net/circular"},"frontmatter":{"title":"Circular 环形布局","order":4}}},{"node":{"fields":{"slug":"/en/examples/net/circular"},"frontmatter":{"title":"Circular Layout","order":4}}},{"node":{"fields":{"slug":"/en/examples/scatter/changePosition"},"frontmatter":{"title":"Change Node Positions","order":4}}},{"node":{"fields":{"slug":"/zh/examples/scatter/changePosition"},"frontmatter":{"title":"改变节点位置","order":4}}},{"node":{"fields":{"slug":"/zh/docs/api/Behavior"},"frontmatter":{"title":"Behavior","order":5}}},{"node":{"fields":{"slug":"/en/docs/api/Behavior"},"frontmatter":{"title":"Behavior","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/plugins"},"frontmatter":{"title":"插件与工具","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/plugins"},"frontmatter":{"title":"Plugins and Tools","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/states/mode"},"frontmatter":{"title":"Interaction Mode","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/mode"},"frontmatter":{"title":"交互模式 Mode","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edgeVisible"},"frontmatter":{"title":"The Visibility","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edgeVisible"},"frontmatter":{"title":"显示与隐藏","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/build-error"},"frontmatter":{"title":"Building Error","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/build-error"},"frontmatter":{"title":"Build 报错","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-behavior"},"frontmatter":{"title":"Custom Behavior","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/custom-behavior"},"frontmatter":{"title":"自定义交互 Behavior","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/arc"},"frontmatter":{"title":"Arc","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/arc"},"frontmatter":{"title":"Arc","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/triangle"},"frontmatter":{"title":"Triangle","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/triangle"},"frontmatter":{"title":"Triangle","order":5}}},{"node":{"fields":{"slug":"/en/examples/tree/customItemTree"},"frontmatter":{"title":"Custom Tree Items","order":5}}},{"node":{"fields":{"slug":"/zh/examples/tree/customItemTree"},"frontmatter":{"title":"定制树图元素样式","order":5}}},{"node":{"fields":{"slug":"/en/examples/net/gridLayout"},"frontmatter":{"title":"Grid","order":5}}},{"node":{"fields":{"slug":"/zh/examples/net/gridLayout"},"frontmatter":{"title":"Grid 网格布局","order":5}}},{"node":{"fields":{"slug":"/zh/examples/interaction/position"},"frontmatter":{"title":"移动位置","order":5}}},{"node":{"fields":{"slug":"/en/examples/interaction/position"},"frontmatter":{"title":"Move Nodes","order":5}}},{"node":{"fields":{"slug":"/en/examples/scatter/customAnimate"},"frontmatter":{"title":"Custom Animation","order":5}}},{"node":{"fields":{"slug":"/zh/examples/scatter/customAnimate"},"frontmatter":{"title":"自定义动画","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/animation"},"frontmatter":{"title":"Animation*","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/animation"},"frontmatter":{"title":"动画（选读）","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/states/state"},"frontmatter":{"title":"State","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/state"},"frontmatter":{"title":"状态 State","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/front-edge"},"frontmatter":{"title":"Render the Edge on the Top","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/front-edge"},"frontmatter":{"title":"如何设置 Edge 前置","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/loop"},"frontmatter":{"title":"Loop","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/loop"},"frontmatter":{"title":"Loop","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/star"},"frontmatter":{"title":"Star","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/star"},"frontmatter":{"title":"Star","order":6}}},{"node":{"fields":{"slug":"/zh/docs/api/Event"},"frontmatter":{"title":"Event","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/Event"},"frontmatter":{"title":"Event","order":6}}},{"node":{"fields":{"slug":"/en/examples/net/concentricLayout"},"frontmatter":{"title":"Concentric Layout","order":6}}},{"node":{"fields":{"slug":"/zh/examples/net/concentricLayout"},"frontmatter":{"title":"Concentric 同心圆布局","order":6}}},{"node":{"fields":{"slug":"/zh/docs/api/Shape"},"frontmatter":{"title":"Shape","order":7}}},{"node":{"fields":{"slug":"/en/docs/api/Shape"},"frontmatter":{"title":"Shape","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/epilog"},"frontmatter":{"title":"Conclusion","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/epilog"},"frontmatter":{"title":"结语","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/mode-and-custom-behavior"},"frontmatter":{"title":"交互模式 Mode","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/image"},"frontmatter":{"title":"Image","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/image"},"frontmatter":{"title":"Image","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/mode-and-custom-behavior"},"frontmatter":{"title":"Interaction Mode","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/layout"},"frontmatter":{"title":"使用布局 Layout","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/layout"},"frontmatter":{"title":"Utilizing Layout","order":7}}},{"node":{"fields":{"slug":"/en/examples/net/mdsLayout"},"frontmatter":{"title":"MDS Layout","order":7}}},{"node":{"fields":{"slug":"/zh/examples/net/mdsLayout"},"frontmatter":{"title":"MDS 布局","order":7}}},{"node":{"fields":{"slug":"/en/docs/api/Group"},"frontmatter":{"title":"Graphics Group","order":8}}},{"node":{"fields":{"slug":"/zh/docs/api/Group"},"frontmatter":{"title":"Graphics Group","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/nodeGroup"},"frontmatter":{"title":"Node Group","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/nodeGroup"},"frontmatter":{"title":"节点分组 Group","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/create-node-group"},"frontmatter":{"title":"Create Node Group","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/create-node-group"},"frontmatter":{"title":"手动创建节点分组 Group","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/animation"},"frontmatter":{"title":"基础动画","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/modelRect"},"frontmatter":{"title":"ModelRect","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/modelRect"},"frontmatter":{"title":"ModelRect","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/animation"},"frontmatter":{"title":"Basic Animation","order":8}}},{"node":{"fields":{"slug":"/en/examples/net/arcDiagram"},"frontmatter":{"title":"Arc Diagram","order":8}}},{"node":{"fields":{"slug":"/zh/examples/net/arcDiagram"},"frontmatter":{"title":"Arc Diagram 弧线图","order":8}}},{"node":{"fields":{"slug":"/zh/docs/api/Plugins"},"frontmatter":{"title":"插件 Plugins","order":9}}},{"node":{"fields":{"slug":"/en/docs/api/Plugins"},"frontmatter":{"title":"Plugins","order":9}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/g6InReact"},"frontmatter":{"title":"React 中使用 G6","order":9}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/g6InReact"},"frontmatter":{"title":"G6 in React","order":9}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/iconfont"},"frontmatter":{"title":"使用 Iconfont","order":9}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/iconfont"},"frontmatter":{"title":"Utilizing Iconfont","order":9}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/lock-node"},"frontmatter":{"title":"Lock Node","order":10}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/lock-node"},"frontmatter":{"title":"Lock Node","order":10}}},{"node":{"fields":{"slug":"/en/docs/api/Custom"},"frontmatter":{"title":"Custom Mechanism","order":10}}},{"node":{"fields":{"slug":"/zh/docs/api/Custom"},"frontmatter":{"title":"自定义机制","order":10}}},{"node":{"fields":{"slug":"/zh/examples/net/layoutMechanism"},"frontmatter":{"title":"布局机制","order":19}}},{"node":{"fields":{"slug":"/en/examples/net/layoutMechanism"},"frontmatter":{"title":"Layout Mechanism","order":19}}},{"node":{"fields":{"slug":"/en/examples/tree/radialtree/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/radialtree/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/mindmap/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/mindmap/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/indented/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/indented/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/dendrogram/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/dendrogram/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/compactBox/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/compactBox/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/mdsLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/mdsLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/radialLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/radialLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/gridLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/gridLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/furchtermanLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/furchtermanLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/forceDirected/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/forceDirected/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/dagreFlow/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/dagreFlow/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/concentricLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/concentricLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/circular/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/circular/API"},"frontmatter":{"title":"API","order":null}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"prev":{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/triangle"},"frontmatter":{"title":"Triangle","order":5},"html":"<h2 id=\"triangle\"><a href=\"#triangle\" aria-label=\"triangle permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Triangle</h2>\n<p>G6 内置了三角形 Triangle 节点，其默认样式如下。标签文本位于三角形下方。<br /><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*FY1XQZHEc6YAAAAAAAAAAABkARQnAQ' width=100/></p>\n<h2 id=\"使用方法\"><a href=\"#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95\" aria-label=\"使用方法 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用方法</h2>\n<p>如 <a href=\"/zh/docs/manual/middle/elements/nodes/defaultNode\">内置节点</a> 一节所示，配置节点的方式有两种：实例化图时全局配置，在数据中动态配置。</p>\n<h3 id=\"1-实例化图时全局配置\"><a href=\"#1-%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%9B%BE%E6%97%B6%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE\" aria-label=\"1 实例化图时全局配置 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1 实例化图时全局配置</h3>\n<p>用户在实例化 Graph 时候可以通过 <code class=\"language-text\">defaultNode</code> 指定 <code class=\"language-text\">shape</code> 为 <code class=\"language-text\">&#39;triangle&#39;</code>，即可使用 <code class=\"language-text\">triangle</code> 节点。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token punctuation\">:</span> <span class=\"token string\">'mountNode'</span><span class=\"token punctuation\">,</span>\n  width<span class=\"token punctuation\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token punctuation\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n  defaultNode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'triangle'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 其他配置</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3 id=\"2-在数据中动态配置\"><a href=\"#2-%E5%9C%A8%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE\" aria-label=\"2 在数据中动态配置 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2 在数据中动态配置</h3>\n<p>如果需要使不同节点有不同的配置，可以将配置写入到节点数据中。这种配置方式可以通过下面代码的形式直接写入数据，也可以通过遍历数据的方式写入。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n\t  id<span class=\"token punctuation\">:</span> <span class=\"token string\">'node0'</span><span class=\"token punctuation\">,</span>\n    shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'triangle'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span> <span class=\"token comment\">// 其他配置</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span> <span class=\"token comment\">// 其他节点</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  edges<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">...</span> <span class=\"token comment\">// 边</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"配置项说明\"><a href=\"#%E9%85%8D%E7%BD%AE%E9%A1%B9%E8%AF%B4%E6%98%8E\" aria-label=\"配置项说明 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置项说明</h2>\n<p>triangle 节点支持 <a href=\"/zh/docs/manual/middle/elements/nodes/defaultNode#%E8%8A%82%E7%82%B9%E7%9A%84%E9%80%9A%E7%94%A8%E5%B1%9E%E6%80%A7\">节点通用配置</a>，下表对部分属性进行解释：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>含义</th>\n<th>类型</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>size</td>\n<td>三角形的边长</td>\n<td>Number</td>\n<td>Array</td>\n</tr>\n<tr>\n<td><strong>direction</strong></td>\n<td><strong>三角形的方向</strong></td>\n<td><strong>String</strong></td>\n<td><strong>可取值：<code class=\"language-text\">&#39;up&#39;</code>，<code class=\"language-text\">&#39;down&#39;</code>，<code class=\"language-text\">&#39;left&#39;</code>，<code class=\"language-text\">&#39;right&#39;</code>。默认为 <code class=\"language-text\">&#39;up&#39;</code></strong></td>\n</tr>\n<tr>\n<td>style</td>\n<td>三角形默认样式</td>\n<td>Object</td>\n<td>Canvas 支持的属性</td>\n</tr>\n<tr>\n<td>label</td>\n<td>标签文本内容</td>\n<td>String</td>\n<td></td>\n</tr>\n<tr>\n<td>labelCfg</td>\n<td>标签文本配置项</td>\n<td>Object</td>\n<td></td>\n</tr>\n<tr>\n<td>stateStyles</td>\n<td>各状态下的样式</td>\n<td>Object</td>\n<td>只对 keyShape 起作用</td>\n</tr>\n<tr>\n<td>linkPoints</td>\n<td><strong>视觉上的</strong>三个锚点</td>\n<td>Object</td>\n<td>默认不显示，应与 <a href=\"/zh/docs/manual/middle/elements/nodes/defaultNode/#%E8%8A%82%E7%82%B9%E7%9A%84%E9%80%9A%E7%94%A8%E5%B1%9E%E6%80%A7\">anchorPoints</a> 配合使用。二者区别请看 <a href=\"#linkpoints\">linkPoints</a></td>\n</tr>\n<tr>\n<td>icon</td>\n<td>三角形上 icon 配置</td>\n<td>Object</td>\n<td>默认不显示 icon</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"三角形方向-direction\"><a href=\"#%E4%B8%89%E8%A7%92%E5%BD%A2%E6%96%B9%E5%90%91-direction\" aria-label=\"三角形方向 direction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>三角形方向 direction</h3>\n<p>String 类型。可取值有：<code class=\"language-text\">&#39;``up&#39;</code>、<code class=\"language-text\">&#39;down&#39;</code>、<code class=\"language-text\">&#39;left&#39;</code>、<code class=\"language-text\">&#39;right&#39;</code>。默认为 <code class=\"language-text\">&#39;``up&#39;</code>。通过设置 <code class=\"language-text\">direction</code>，可以修改三角形的方向。下面代码演示在实例化图时全局配置方法中配置 <code class=\"language-text\">direction</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token punctuation\">:</span> <span class=\"token string\">'mountNode'</span><span class=\"token punctuation\">,</span>\n  width<span class=\"token punctuation\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token punctuation\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n  defaultNode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'triangle'</span><span class=\"token punctuation\">,</span>\n    direction<span class=\"token punctuation\">:</span> <span class=\"token string\">'down'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*HuGHTrWfGYsAAAAAAAAAAABkARQnAQ' width=100/>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*hsOBSo1sFFAAAAAAAAAAAABkARQnAQ' width=100/>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*irgPRrU3JdEAAAAAAAAAAABkARQnAQ' width=100/>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*yxEXQK-P4nsAAAAAAAAAAABkARQnAQ' width=100/>\n<blockquote>\n<p>上图分别是将 <code class=\"language-text\">direction</code> 配置为 <code class=\"language-text\">&#39;up&#39;</code>，<code class=\"language-text\">&#39;down&#39;</code>，<code class=\"language-text\">&#39;left&#39;</code>，<code class=\"language-text\">&#39;right&#39;</code> 的结果</p>\n</blockquote>\n<h3 id=\"样式属性-style\"><a href=\"#%E6%A0%B7%E5%BC%8F%E5%B1%9E%E6%80%A7-style\" aria-label=\"样式属性 style permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>样式属性 style</h3>\n<p>Object 类型。支持 <a href=\"/zh/docs/manual/middle/elements/nodes/defaultNode#%E6%A0%B7%E5%BC%8F%E5%B1%9E%E6%80%A7-style\">节点通用样式</a>。通过 <code class=\"language-text\">style</code> 配置来修改节点的填充色、描边等属性。下面代码演示在实例化图时全局配置方法中配置 <code class=\"language-text\">style</code>，使之达到如下图效果。<br /><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*6-qaTJkpsKYAAAAAAAAAAABkARQnAQ' width=100/></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'triangle'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'triangle'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token punctuation\">:</span> <span class=\"token string\">'mountNode'</span><span class=\"token punctuation\">,</span>\n  width<span class=\"token punctuation\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token punctuation\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n  defaultNode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// shape: 'triangle', // 在数据中已经指定 shape，这里无需再次指定</span>\n    direction<span class=\"token punctuation\">:</span> <span class=\"token string\">'up'</span><span class=\"token punctuation\">,</span>\n    size<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'#bae637'</span><span class=\"token punctuation\">,</span>\n      stroke<span class=\"token punctuation\">:</span> <span class=\"token string\">'#eaff8f'</span><span class=\"token punctuation\">,</span>\n      lineWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3 id=\"标签文本配置-labelcfg\"><a href=\"#%E6%A0%87%E7%AD%BE%E6%96%87%E6%9C%AC%E9%85%8D%E7%BD%AE-labelcfg\" aria-label=\"标签文本配置 labelcfg permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>标签文本配置 labelCfg</h3>\n<p>Object 类型。通过 <code class=\"language-text\">labelCfg</code> 配置标签文本。支持 <a href=\"/zh/docs/manual/middle/elements/nodes/defaultNode/#%E6%A0%87%E7%AD%BE%E6%96%87%E6%9C%AC-label-%E5%8F%8A%E5%85%B6%E9%85%8D%E7%BD%AE-labelcfg\">节点通用标签配置</a>。基于上面 <a href=\"#%E6%A0%B7%E5%BC%8F%E5%B1%9E%E6%80%A7-style\">样式属性 style</a> 中的代码，下面代码在 <code class=\"language-text\">defaultNode</code> 中增加了 <code class=\"language-text\">labelCfg</code> 配置项进行文本的配置，使之达到如下图效果。<br /><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*5KkKRaDXqXgAAAAAAAAAAABkARQnAQ' width=100/></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... data 内容</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... 图的其他属性</span>\n  defaultNode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ... 节点其他属性</span>\n    labelCfg<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      position<span class=\"token punctuation\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n      style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'#9254de'</span><span class=\"token punctuation\">,</span>\n        fontSize<span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n</code></pre></div>\n<h3 id=\"linkpoints\"><a href=\"#linkpoints\" aria-label=\"linkpoints permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a> linkPoints</h3>\n<p>Object 类型。通过配置 <code class=\"language-text\">linkPoints</code> ，可以指定节点上「上、左、右」三个小圆点。</p>\n<p><span style=\"background-color: rgb(251, 233, 231); color: rgb(139, 53, 56)\"><strong>⚠️注意:</strong></span>区分于 <code class=\"language-text\">anchorPoints</code>：\n<code class=\"language-text\">anchorPoints</code> 是真正用于指定该节点相关边的连入位置的「<strong>数组</strong>」，见 <a href=\"/zh/docs/manual/middle/keyconcept/anchorpoint\">anchorPoints</a>；\n而 <code class=\"language-text\">linkPoints</code> 仅是指定是否「<strong>绘制</strong>」出四个圆点，不起实际的连接相关边的作用。二者常常配合使用。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>含义</th>\n<th>类型</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>top</td>\n<td>是否显示上部的圆点</td>\n<td>Boolean</td>\n<td>默认为 <code class=\"language-text\">false</code></td>\n</tr>\n<tr>\n<td>left</td>\n<td>是否显示左侧的圆点</td>\n<td>Boolean</td>\n<td>默认为 <code class=\"language-text\">false</code></td>\n</tr>\n<tr>\n<td>right</td>\n<td>是否显示右侧的圆点</td>\n<td>Boolean</td>\n<td>默认为 <code class=\"language-text\">false</code></td>\n</tr>\n<tr>\n<td>size</td>\n<td>圆点的大小</td>\n<td>Number</td>\n<td>默认为 <code class=\"language-text\">3</code></td>\n</tr>\n<tr>\n<td>fill</td>\n<td>圆点的填充色</td>\n<td>String</td>\n<td>默认为 <code class=\"language-text\">&#39;#72CC4A&#39;</code></td>\n</tr>\n<tr>\n<td>stroke</td>\n<td>圆点的边框颜色</td>\n<td>String</td>\n<td>默认为 <code class=\"language-text\">&#39;#72CC4A&#39;</code></td>\n</tr>\n<tr>\n<td>lineWidth</td>\n<td>圆点边框的宽度</td>\n<td>Number</td>\n<td>默认为 <code class=\"language-text\">1</code></td>\n</tr>\n</tbody>\n</table>\n<p>基于上面 <a href=\"#%E6%A0%B7%E5%BC%8F%E5%B1%9E%E6%80%A7-style\">样式属性 style</a> 中的代码，下面代码在 <code class=\"language-text\">defaultNode</code> 中增加了 <code class=\"language-text\">linkPoints</code> 配置项进行连入点的配置，使之达到如下图效果。<br /><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*aB-PT4nzU_oAAAAAAAAAAABkARQnAQ' width=100/></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... data 内容</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... 图的其他属性</span>\n  defaultNode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ... 其他属性</span>\n    linkPoints<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      top<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      bottom<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      left<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      right<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span>\n      size<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n</code></pre></div>\n<h3 id=\"图标-icon\"><a href=\"#%E5%9B%BE%E6%A0%87-icon\" aria-label=\"图标 icon permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>图标 icon</h3>\n<p>Object 类型。通过配置 <code class=\"language-text\">icon</code>，可以在圆上显示小图标。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>含义</th>\n<th>类型</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>show</td>\n<td>是否显示 icon</td>\n<td>Boolean</td>\n<td>默认为 false，不显示</td>\n</tr>\n<tr>\n<td>width</td>\n<td>icon 的宽度</td>\n<td>Number</td>\n<td>默认为 16</td>\n</tr>\n<tr>\n<td>height</td>\n<td>icon 的高度</td>\n<td>Number</td>\n<td>默认为 16</td>\n</tr>\n<tr>\n<td>img</td>\n<td>icon 的图片地址</td>\n<td>String</td>\n<td>默认有一个如下图中的图片</td>\n</tr>\n<tr>\n<td><strong>offset</strong></td>\n<td><strong>icon 的偏移量</strong></td>\n<td><strong>Number</strong></td>\n<td><strong>默认为 0，triangle 节点的 icon 特有的配置</strong></td>\n</tr>\n</tbody>\n</table>\n<p>基于上面 <a href=\"#%E6%A0%B7%E5%BC%8F%E5%B1%9E%E6%80%A7-style\">样式属性 style</a> 中的代码，下面代码在 <code class=\"language-text\">defaultNode</code> 中增加了 <code class=\"language-text\">icon</code> 配置项进行图标的配置，使之达到如下图效果。<br /><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*2w62R5ZYtVAAAAAAAAAAAABkARQnAQ' width=100/></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... data 内容</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ... 图的其他属性</span>\n  defaultNode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ... 其他属性</span>\n    icon<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      show<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      width<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n      height<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n      offset<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n</code></pre></div>"}},"next":{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/behavior"},"frontmatter":{"title":"图的交互 Behavior","order":4},"html":"<p>G6 封装了一系列交互方法，方便用户直接使用。本文将为 <strong>Tutorial 案例</strong> 增加简单的交互：hover 节点、点击节点、点击边、放缩画布、拖拽画布。本节目标效果如下：</p>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*dijtQ6nB5Y4AAAAAAAAAAABkARQnAQ' width=500 />\n<blockquote>\n<p>图 1 Tutorial 案例的交互效果。</p>\n</blockquote>\n<h2 id=\"基本概念\"><a href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\" aria-label=\"基本概念 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>基本概念</h2>\n<h3 id=\"交互行为-behavior\"><a href=\"#%E4%BA%A4%E4%BA%92%E8%A1%8C%E4%B8%BA-behavior\" aria-label=\"交互行为 behavior permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>交互行为 Behavior</h3>\n<p>G6 中的交互行为。G6 <strong>内置</strong>了一系列交互行为，用户可以直接使用。简单地理解，就是可以一键开启这些交互行为：</p>\n<ul>\n<li><code class=\"language-text\">drag-canvas</code>：拖拽画布；</li>\n<li><code class=\"language-text\">zoom-canvas</code>：缩放画布。</li>\n</ul>\n<p>更多详见：<a href=\"/zh/docs/manual/middle/states/defaultBehavior\">交互行为 Behavior</a></p>\n<h3 id=\"交互管理-mode\"><a href=\"#%E4%BA%A4%E4%BA%92%E7%AE%A1%E7%90%86-mode\" aria-label=\"交互管理 mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>交互管理 Mode</h3>\n<p>Mode 是 G6 交互行为的管理机制，一个 mode 是多种行为 Behavior 的组合，允许用户通过切换不同的模式进行交互行为的管理。由于该概念较为复杂，在本入门教程中，读者不需要对该机制深入理解。如有需求，参见 <a href=\"/zh/docs/manual/middle/states/mode\">交互模式 Mode</a>。</p>\n<h3 id=\"交互状态-state\"><a href=\"#%E4%BA%A4%E4%BA%92%E7%8A%B6%E6%80%81-state\" aria-label=\"交互状态 state permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>交互状态 State</h3>\n<p><a href=\"/zh/docs/manual/middle/states/state\">状态 State</a> 是 G6 中的状态机制。用户可以为图中的元素（节点/边）设置不同的状态及不同状态下的样式。在状态发生变化时，G6 自动更新元素的样式。例如，可以为节点设置状态 <code class=\"language-text\">&#39;click&#39;</code> 为 <code class=\"language-text\">true</code> 或 <code class=\"language-text\">false</code>，并为节点设置 <code class=\"language-text\">&#39;click&#39;</code> 的样式为加粗节点边框。当 <code class=\"language-text\">&#39;click&#39;</code> 状态被切换为 <code class=\"language-text\">true</code> 时，节点的边框将会被加粗，<code class=\"language-text\">&#39;click&#39;</code> 状态被切换为 <code class=\"language-text\">false</code> 时，节点的样式恢复到默认。在下面的使用方法中，将会有具体例子。</p>\n<h2 id=\"使用方法\"><a href=\"#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95\" aria-label=\"使用方法 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用方法</h2>\n<h3 id=\"拖拽、缩放内置的交互行为\"><a href=\"#%E6%8B%96%E6%8B%BD%E3%80%81%E7%BC%A9%E6%94%BE%E5%86%85%E7%BD%AE%E7%9A%84%E4%BA%A4%E4%BA%92%E8%A1%8C%E4%B8%BA\" aria-label=\"拖拽、缩放内置的交互行为 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>拖拽、缩放——内置的交互行为</h3>\n<p>在 G6 中使用内置 Behavior 的方式非常简单，只需要在图实例化时配置 <code class=\"language-text\">modes</code>。拖拽和缩放属于 G6 内置交互行为，修改代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...                                          // 其他配置项</span>\n  modes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'drag-canvas'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zoom-canvas'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'drag-node'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 允许拖拽画布、放缩画布、拖拽节点</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>除了直接使用内置交互名称外，也可以为 Behavior 配置参数，例如放缩画布的敏感度、最大/最小放缩程度等，具体用法参见 <a href=\"/zh/docs/manual/middle/states/defaultBehavior\">交互行为 Behavior</a>。</p>\n<p>上面代码中的 <code class=\"language-text\">modes</code> 定义了 G6 的模式，<code class=\"language-text\">default</code> 是默认的模式，还可以允许有其他的模式，比如：编辑模式 <code class=\"language-text\">edit</code> 等。不同的模式，用户能进行的行为可以不同，比如默认模式能拖拽画布，编辑模式不允许拖拽画布：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 举例解释不同模式</span>\nmodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'drag-canvas'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  edit<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>更多关于模式、行为可以参考: <a href=\"/zh/docs/manual/middle/states/mode\">交互模型 Mode</a> 和 <a href=\"/zh/docs/manual/middle/states/defaultBehavior\">交互行为 Behavior</a> 文档。</p>\n<h3 id=\"hover、click-改变样式状态式交互\"><a href=\"#hover%E3%80%81click-%E6%94%B9%E5%8F%98%E6%A0%B7%E5%BC%8F%E7%8A%B6%E6%80%81%E5%BC%8F%E4%BA%A4%E4%BA%92\" aria-label=\"hover、click 改变样式状态式交互 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hover、Click 改变样式——状态式交互</h3>\n<p>有时我们希望通过交互可以将元素样式变成特定样式，如我们看到的图 1 中，鼠标 hover 节点、点击节点、点击边时，样式发生了变化。这里涉及到了 G6 中 <a href=\"/zh/docs/manual/middle/states/state\">状态 State</a> 的概念。简单地说，是否 <code class=\"language-text\">hover</code> 、<code class=\"language-text\">click</code> 、任何操作（可以是自己起的状态名），都可以称为一种状态（state）。用户可以自由设置不同状态下的元素样式。要达到交互更改元素样式，需要两步：</p>\n<ul>\n<li>Step 1: 设置各状态下的元素样式；</li>\n<li>Step 2: 监听事件并切换元素状态。</li>\n</ul>\n<h4 id=\"设置各状态下的元素样式\"><a href=\"#%E8%AE%BE%E7%BD%AE%E5%90%84%E7%8A%B6%E6%80%81%E4%B8%8B%E7%9A%84%E5%85%83%E7%B4%A0%E6%A0%B7%E5%BC%8F\" aria-label=\"设置各状态下的元素样式 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>设置各状态下的元素样式</h4>\n<p>在实例化图时，通过 <code class=\"language-text\">nodeStateStyles</code> 和 <code class=\"language-text\">edgeStateStyles</code> 两个配置项可以配置元素在不同状态下的样式。<br />为达到 <strong>Tutorial 案例</strong> 中的效果：</p>\n<ul>\n<li>鼠标 hover 节点时，该节点颜色变浅；</li>\n<li>点击节点时，该节点边框加粗变黑；</li>\n<li>点击边时，该边变成蓝色。</li>\n</ul>\n<p>下面代码设置了节点分别在 <code class=\"language-text\">hover</code> 和 <code class=\"language-text\">click</code> 状态为 <code class=\"language-text\">true</code> 时的样式，边在 <code class=\"language-text\">click</code> 状态为 <code class=\"language-text\">true</code> 时的样式：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...                           // 其他配置项</span>\n  <span class=\"token comment\">// 节点不同状态下的样式集合</span>\n  nodeStateStyles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 鼠标 hover 上节点，即 hover 状态为 true 时的样式</span>\n    hover<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'lightsteelblue'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 鼠标点击节点，即 click 状态为 true 时的样式</span>\n    click<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      stroke<span class=\"token punctuation\">:</span> <span class=\"token string\">'#000'</span><span class=\"token punctuation\">,</span>\n      lineWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 边不同状态下的样式集合</span>\n  edgeStateStyles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 鼠标点击边，即 click 状态为 true 时的样式</span>\n    click<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      stroke<span class=\"token punctuation\">:</span> <span class=\"token string\">'steelblue'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"监听事件并切换元素状态\"><a href=\"#%E7%9B%91%E5%90%AC%E4%BA%8B%E4%BB%B6%E5%B9%B6%E5%88%87%E6%8D%A2%E5%85%83%E7%B4%A0%E7%8A%B6%E6%80%81\" aria-label=\"监听事件并切换元素状态 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>监听事件并切换元素状态</h4>\n<p>G6 中所有元素监听都挂载在图实例上，如下代码中的 <code class=\"language-text\">graph</code> 对象是 G6.Graph 的实例，<code class=\"language-text\">graph.on()</code> 函数监听了某元素类型（<code class=\"language-text\">node</code> / <code class=\"language-text\">edge</code>）的某种事件（<code class=\"language-text\">click</code> / <code class=\"language-text\">mouseenter</code> / <code class=\"language-text\">mouseleave</code> / ... 所有事件参见：<a href=\"/zh/docs/api/Event\">Event API</a>）。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 在图实例 graph 上监听</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'元素类型:事件名'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do something</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>现在，我们通过下面代码，为 <strong>Tutorial 案例</strong> 增加点和边上的监听事件，并在监听函数里使用 <code class=\"language-text\">graph.setItemState()</code> 改变元素的状态：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 鼠标进入节点</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:mouseenter'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> nodeItem <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取鼠标进入的节点元素对象</span>\n  graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>nodeItem<span class=\"token punctuation\">,</span> <span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置当前节点的 hover 状态为 true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 鼠标离开节点</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:mouseleave'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> nodeItem <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取鼠标离开的节点元素对象</span>\n  graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>nodeItem<span class=\"token punctuation\">,</span> <span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置当前节点的 hover 状态为 false</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 点击节点</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 先将所有当前是 click 状态的节点置为非 click 状态</span>\n  <span class=\"token keyword\">const</span> clickNodes <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span><span class=\"token function\">findAllByState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  clickNodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cn</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>cn<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> nodeItem <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取被点击的节点元素对象</span>\n  graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>nodeItem<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置当前节点的 click 状态为 true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 点击边</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'edge:click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 先将所有当前是 click 状态的边置为非 click 状态</span>\n  <span class=\"token keyword\">const</span> clickEdges <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span><span class=\"token function\">findAllByState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'edge'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  clickEdges<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ce</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>ce<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> edgeItem <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取被点击的边元素对象</span>\n  graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>edgeItem<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置当前边的 click 状态为 true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"完整代码\"><a href=\"#%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81\" aria-label=\"完整代码 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>完整代码</h2>\n<p>至此，完整代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Tutorial Demo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mountNode<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://gw.alipayobjects.com/os/antv/pkg/_antv.g6-3.1.0/build/g6.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      container<span class=\"token punctuation\">:</span> <span class=\"token string\">'mountNode'</span><span class=\"token punctuation\">,</span>\n      width<span class=\"token punctuation\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span>\n      height<span class=\"token punctuation\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 节点默认配置</span>\n      defaultNode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        labelCfg<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'#fff'</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 边默认配置</span>\n      defaultEdge<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        labelCfg<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          autoRotate<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 节点在各状态下的样式</span>\n      nodeStateStyles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// hover 状态为 true 时的样式</span>\n        hover<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'lightsteelblue'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// click 状态为 true 时的样式</span>\n        click<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          stroke<span class=\"token punctuation\">:</span> <span class=\"token string\">'#000'</span><span class=\"token punctuation\">,</span>\n          lineWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 边在各状态下的样式</span>\n      edgeStateStyles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// click 状态为 true 时的样式</span>\n        click<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          stroke<span class=\"token punctuation\">:</span> <span class=\"token string\">'steelblue'</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 布局</span>\n      layout<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token string\">'force'</span><span class=\"token punctuation\">,</span>\n        linkDistance<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n        preventOverlap<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        nodeStrength<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n        edgeStrength<span class=\"token punctuation\">:</span> <span class=\"token number\">0.1</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 内置交互</span>\n      modes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'drag-canvas'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zoom-canvas'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'drag-node'</span> <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">main</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'https://gw.alipayobjects.com/os/basement_prod/6cae02ab-4c29-44b2-b1fd-4005688febcb.json'</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> remoteData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      \n      <span class=\"token keyword\">const</span> nodes <span class=\"token operator\">=</span> remoteData<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> edges <span class=\"token operator\">=</span> remoteData<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">;</span>\n      nodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          node<span class=\"token punctuation\">.</span>style <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        node<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        node<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>stroke <span class=\"token operator\">=</span> <span class=\"token string\">'#666'</span><span class=\"token punctuation\">;</span>\n        node<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>fill <span class=\"token operator\">=</span> <span class=\"token string\">'steelblue'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>class<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">case</span> <span class=\"token string\">'c0'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            node<span class=\"token punctuation\">.</span>shape <span class=\"token operator\">=</span> <span class=\"token string\">'circle'</span><span class=\"token punctuation\">;</span>\n            node<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">case</span> <span class=\"token string\">'c1'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            node<span class=\"token punctuation\">.</span>shape <span class=\"token operator\">=</span> <span class=\"token string\">'rect'</span><span class=\"token punctuation\">;</span>\n            node<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">case</span> <span class=\"token string\">'c2'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            node<span class=\"token punctuation\">.</span>shape <span class=\"token operator\">=</span> <span class=\"token string\">'ellipse'</span><span class=\"token punctuation\">;</span>\n            node<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      edges<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">edge</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>edge<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          edge<span class=\"token punctuation\">.</span>style <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        edge<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> edge<span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">;</span>\n        edge<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>opacity <span class=\"token operator\">=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span>\n        edge<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>stroke <span class=\"token operator\">=</span> <span class=\"token string\">'grey'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      graph<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>remoteData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      graph<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// 监听鼠标进入节点</span>\n      graph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:mouseenter'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> nodeItem <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 设置目标节点的 hover 状态 为 true</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>nodeItem<span class=\"token punctuation\">,</span> <span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 监听鼠标离开节点</span>\n      graph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:mouseleave'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> nodeItem <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 设置目标节点的 hover 状态 false</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>nodeItem<span class=\"token punctuation\">,</span> <span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 监听鼠标点击节点</span>\n      graph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 先将所有当前有 click 状态的节点的 click 状态置为 false</span>\n        <span class=\"token keyword\">const</span> clickNodes <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span><span class=\"token function\">findAllByState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        clickNodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cn</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>cn<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> nodeItem <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 设置目标节点的 click 状态 为 true</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>nodeItem<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 监听鼠标点击节点</span>\n      graph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'edge:click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 先将所有当前有 click 状态的边的 click 状态置为 false</span>\n        <span class=\"token keyword\">const</span> clickEdges <span class=\"token operator\">=</span> graph<span class=\"token punctuation\">.</span><span class=\"token function\">findAllByState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'edge'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        clickEdges<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ce</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>ce<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> edgeItem <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 设置目标边的 click 状态 为 true</span>\n        graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>edgeItem<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><span style=\"background-color: rgb(251, 233, 231); color: rgb(139, 53, 56)\"><strong>⚠️注意:</strong></span><br />若需更换数据，请替换 <code class=\"language-text\">&#39;https://gw.alipayobjects.com/os/basement_prod/6cae02ab-4c29-44b2-b1fd-4005688febcb.json&#39;</code> 为新的数据文件地址。</p>"}}}}}