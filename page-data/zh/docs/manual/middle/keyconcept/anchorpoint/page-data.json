{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-9-102-antv-gatsby-theme-antv-site-templates-document-tsx","path":"/zh/docs/manual/middle/keyconcept/anchorpoint","result":{"data":{"site":{"siteMetadata":{"title":"G6","githubUrl":"https://github.com/antvis/g6","docs":[{"slug":"manual/FAQ","title":{"zh":"FAQ","en":"FAQ"},"order":2},{"slug":"manual/tutorial","title":{"zh":"入门教程","en":"Tutorial"},"order":3},{"slug":"manual/middle","title":{"zh":"核心概念","en":"Middle"},"order":4},{"slug":"manual/middle/keyconcept","title":{"zh":"关键名词解释","en":"Key Concept"},"order":2},{"slug":"manual/middle/states","title":{"zh":"交互与事件","en":"Behavior & Event"},"order":4},{"slug":"manual/middle/elements","title":{"zh":"节点与边","en":"Graph Element"},"order":3},{"slug":"manual/middle/elements/nodes","title":{"zh":"内置节点","en":"Default Node"},"order":2},{"slug":"manual/middle/elements/edges","title":{"zh":"内置边","en":"Default Edge"},"order":3},{"slug":"manual/advanced","title":{"zh":"高级指引","en":"Advanced"},"order":5},{"slug":"manual/advanced/keyconcept","title":{"zh":"关键概念","en":"Advanced"},"order":1},{"slug":"manual/cases","title":{"zh":"综合应用","en":"Cases"},"order":6},{"slug":"api","title":{"zh":"API 文档","en":"API Doc"},"order":null},{"slug":"api/nodeEdge","title":{"zh":"节点和边","en":"Node & Edge"},"order":4},{"slug":"api/layout","title":{"zh":"Layout","en":"Layout"},"order":5}]},"pathPrefix":""},"markdownRemark":{"html":"<p>节点的连接点 anchorPoint 指的是边连入节点的相对位置，即节点与其相关边的交点位置。anchorPoints 是一个二维数组，每一项表示一个连接点的位置，在一个<a href=\"/zh/docs/manual/middle/keyconcept/shape-keyshape\">图形 Shape</a> 中，连接点的位置如下图所示，x 和 y 方向上范围都是 [0, 1]：<br />\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*EJTyR4j9VN4AAAAAAAAAAABkARQnAQ' width='600' height='300' /></p>\n<p>节点中有了 anchorPoints 之后，相关边可以分别选择连入起始点、结束点的哪一个 anchorPoint。当需要在节点之间连多条线时，这种机制能够使边的连入更美观。</p>\n<p>边可以通过指定 <code class=\"language-text\">sourceAnchor</code> 和 <code class=\"language-text\">targetAnchor</code> 分别选择起始点、结束点的 anchorPoint。<code class=\"language-text\">sourceAnchor</code> 和 <code class=\"language-text\">targetAnchor</code> 取的值是相对应节点上 anchorPoints 数组的索引值。</p>\n<p>下面数据演示了如何在节点上配置连接点、在边上指定连接点：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token string\">'node1'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'node1'</span><span class=\"token punctuation\">,</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 该节点可选的连接点集合，该点有两个可选的连接点</span>\n      anchorPoints<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token string\">'node2'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'node2'</span><span class=\"token punctuation\">,</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 该节点可选的连接点集合，该点有两个可选的连接点</span>\n      anchorPoints<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">[</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  edges<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      source<span class=\"token punctuation\">:</span> <span class=\"token string\">'node1'</span><span class=\"token punctuation\">,</span>\n      target<span class=\"token punctuation\">:</span> <span class=\"token string\">'node2'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 该边连入 source 点的第 0 个 anchorPoint，</span>\n      sourceAnchor<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 该边连入 target 点的第 0 个 anchorPoint，</span>\n      targetAnchor<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        endArrow<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      source<span class=\"token punctuation\">:</span> <span class=\"token string\">'node2'</span><span class=\"token punctuation\">,</span>\n      target<span class=\"token punctuation\">:</span> <span class=\"token string\">'node1'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 该边连入 source 点的第 1 个 anchorPoint，</span>\n      sourceAnchor<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 该边连入 source 点的第 1 个 anchorPoint，</span>\n      targetAnchor<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        endArrow<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","tableOfContents":"","fields":{"slug":"/zh/docs/manual/middle/keyconcept/anchorpoint","readingTime":{"text":"1 min read","time":42300}},"frontmatter":{"title":"节点的连接点 anchorPoint"},"parent":{"__typename":"File","relativePath":"manual/middle/keyconcept/anchorpoint.zh.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/zh/docs/manual/introduction"},"frontmatter":{"title":"简介","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/introduction"},"frontmatter":{"title":"Introduction","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/preface"},"frontmatter":{"title":"Preface","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/preface"},"frontmatter":{"title":"前言","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/layout/Layout"},"frontmatter":{"title":"Layout","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/layout/Layout"},"frontmatter":{"title":"Layout","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/nodeEdge/Item"},"frontmatter":{"title":"Item","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/keyconcept/shape-keyshape"},"frontmatter":{"title":"Graphics Shape and KeyShape","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/keyconcept/shape-keyshape"},"frontmatter":{"title":"图形 Shape 与 keyShape","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/updateText"},"frontmatter":{"title":"Update Label","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/updateText"},"frontmatter":{"title":"如何更新文本样式","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/nodeEdge/Item"},"frontmatter":{"title":"Item","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/cases/sequenceTime"},"frontmatter":{"title":"基于 G6 的关系时序分析应用","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/cases/sequenceTime"},"frontmatter":{"title":"Dynamic Relationship Analysis Powered by G6","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/defaultNode"},"frontmatter":{"title":"内置节点总览","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/defaultNode"},"frontmatter":{"title":"Built-in Nodes","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/defaultEdge"},"frontmatter":{"title":"内置边总览","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/defaultEdge"},"frontmatter":{"title":"Built-in Edges","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/keyconcept/shape-and-properties"},"frontmatter":{"title":"图形 Shape 及其属性","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/keyconcept/shape-and-properties"},"frontmatter":{"title":"Graphics Shape Properties","order":0}}},{"node":{"fields":{"slug":"/zh/examples/tool/tooltip"},"frontmatter":{"title":"提示框","order":0}}},{"node":{"fields":{"slug":"/en/examples/tool/tooltip"},"frontmatter":{"title":"Tooltip","order":0}}},{"node":{"fields":{"slug":"/zh/examples/tree/compactBox"},"frontmatter":{"title":"紧凑树","order":0}}},{"node":{"fields":{"slug":"/en/examples/tree/compactBox"},"frontmatter":{"title":"CompactBox","order":0}}},{"node":{"fields":{"slug":"/en/examples/shape/basic"},"frontmatter":{"title":"Built-in Nodes","order":0}}},{"node":{"fields":{"slug":"/zh/examples/shape/basic"},"frontmatter":{"title":"内置节点","order":0}}},{"node":{"fields":{"slug":"/en/examples/scatter/node"},"frontmatter":{"title":"Node Animation","order":0}}},{"node":{"fields":{"slug":"/zh/examples/scatter/node"},"frontmatter":{"title":"节点动画","order":0}}},{"node":{"fields":{"slug":"/en/examples/interaction/highlight"},"frontmatter":{"title":"Highlight Nodes","order":0}}},{"node":{"fields":{"slug":"/zh/examples/interaction/highlight"},"frontmatter":{"title":"高亮相邻节点","order":0}}},{"node":{"fields":{"slug":"/zh/examples/case/metroLines"},"frontmatter":{"title":"地铁线路图","order":0}}},{"node":{"fields":{"slug":"/en/examples/case/metroLines"},"frontmatter":{"title":"Animated Metro Map","order":0}}},{"node":{"fields":{"slug":"/zh/examples/case/decisionBubbles"},"frontmatter":{"title":"图表决策","order":0}}},{"node":{"fields":{"slug":"/en/examples/case/decisionBubbles"},"frontmatter":{"title":"Visualization Decision","order":0}}},{"node":{"fields":{"slug":"/zh/examples/net/forceDirected"},"frontmatter":{"title":"力导向图布局","order":0}}},{"node":{"fields":{"slug":"/en/examples/net/forceDirected"},"frontmatter":{"title":"Force-directed Layout","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/getting-started"},"frontmatter":{"title":"Getting Started","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/getting-started"},"frontmatter":{"title":"快速上手","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/graph"},"frontmatter":{"title":"Graph","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/graph"},"frontmatter":{"title":"图 Graph","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/nodeEdge/Edge"},"frontmatter":{"title":"Edge","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/nodeEdge/Edge"},"frontmatter":{"title":"Edge","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/nodeEdge/Node"},"frontmatter":{"title":"Node","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/nodeEdge/Node"},"frontmatter":{"title":"Node","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/states/bindEvent"},"frontmatter":{"title":"Listener and Event","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/bindEvent"},"frontmatter":{"title":"监听和绑定事件","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/keyconcept/anchorpoint"},"frontmatter":{"title":"AnchorPoint","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/keyconcept/anchorpoint"},"frontmatter":{"title":"节点的连接点 anchorPoint","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/cases/relations"},"frontmatter":{"title":"Relationship Analysis Powered by G6","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/cases/relations"},"frontmatter":{"title":"基于 G6 的图分析应用","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/updateElement"},"frontmatter":{"title":"Update Item's Style","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/updateElement"},"frontmatter":{"title":"如何更新节点或边的样式","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/circle"},"frontmatter":{"title":"Circle","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/circle"},"frontmatter":{"title":"Circle","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/line"},"frontmatter":{"title":"Line","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/line"},"frontmatter":{"title":"Line","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/keyconcept/graphics-group"},"frontmatter":{"title":"图形分组 Group","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/keyconcept/graphics-group"},"frontmatter":{"title":"Graphics Group","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/example"},"frontmatter":{"title":"Render the Tutorial Demo","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/example"},"frontmatter":{"title":"绘制 Tutorial 案例","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/Graph"},"frontmatter":{"title":"Graph","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/Graph"},"frontmatter":{"title":"Graph","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/layout/Graph"},"frontmatter":{"title":"Graph Layout","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/layout/Graph"},"frontmatter":{"title":"Graph Layout","order":1}}},{"node":{"fields":{"slug":"/zh/examples/tree/dendrogram"},"frontmatter":{"title":"生态树","order":1}}},{"node":{"fields":{"slug":"/en/examples/tree/dendrogram"},"frontmatter":{"title":"Dendrogram","order":1}}},{"node":{"fields":{"slug":"/en/examples/shape/defaultEdges"},"frontmatter":{"title":"Built-in Edges","order":1}}},{"node":{"fields":{"slug":"/en/examples/interaction/loadData"},"frontmatter":{"title":"Onload Multiple Data","order":1}}},{"node":{"fields":{"slug":"/en/examples/case/simplifyCluster"},"frontmatter":{"title":"Collapse/Expand Cluster","order":1}}},{"node":{"fields":{"slug":"/zh/examples/interaction/loadData"},"frontmatter":{"title":"动态加载多条数据","order":1}}},{"node":{"fields":{"slug":"/zh/examples/case/simplifyCluster"},"frontmatter":{"title":"聚类的折叠/扩展","order":1}}},{"node":{"fields":{"slug":"/zh/examples/shape/defaultEdges"},"frontmatter":{"title":"内置边","order":1}}},{"node":{"fields":{"slug":"/en/examples/net/dagreFlow"},"frontmatter":{"title":"Dagre Layout","order":1}}},{"node":{"fields":{"slug":"/zh/examples/net/dagreFlow"},"frontmatter":{"title":"Dagre 流程图布局","order":1}}},{"node":{"fields":{"slug":"/en/examples/scatter/edge"},"frontmatter":{"title":"Edge Animation","order":1}}},{"node":{"fields":{"slug":"/zh/examples/scatter/edge"},"frontmatter":{"title":"边动画","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/rect"},"frontmatter":{"title":"Rect","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/rect"},"frontmatter":{"title":"Rect","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/polyline"},"frontmatter":{"title":"Polyline","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/polyline"},"frontmatter":{"title":"Polyline","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/TreeGraph"},"frontmatter":{"title":"TreeGraph","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/TreeGraph"},"frontmatter":{"title":"TreeGraph","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/elements"},"frontmatter":{"title":"Configure the Items","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/elements"},"frontmatter":{"title":"元素及其配置","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/layout/TreeGraph"},"frontmatter":{"title":"TreeGraph","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/layout/TreeGraph"},"frontmatter":{"title":"TreeGraph","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/cases/edgeBundling"},"frontmatter":{"title":"Edge Bundling","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/cases/edgeBundling"},"frontmatter":{"title":"Edge Bundling","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-node"},"frontmatter":{"title":"Custom Node","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/custom-node"},"frontmatter":{"title":"自定义节点","order":2}}},{"node":{"fields":{"slug":"/zh/examples/tree/mindmap"},"frontmatter":{"title":"脑图树","order":2}}},{"node":{"fields":{"slug":"/en/examples/tree/mindmap"},"frontmatter":{"title":"Mindmap","order":2}}},{"node":{"fields":{"slug":"/zh/examples/shape/customNode"},"frontmatter":{"title":"自定义节点","order":2}}},{"node":{"fields":{"slug":"/zh/examples/scatter/stateChange"},"frontmatter":{"title":"状态切换","order":2}}},{"node":{"fields":{"slug":"/en/examples/scatter/stateChange"},"frontmatter":{"title":"State Switch","order":2}}},{"node":{"fields":{"slug":"/en/examples/shape/customNode"},"frontmatter":{"title":"Custom Node","order":2}}},{"node":{"fields":{"slug":"/zh/examples/interaction/label"},"frontmatter":{"title":"改变标签或背景","order":2}}},{"node":{"fields":{"slug":"/en/examples/interaction/label"},"frontmatter":{"title":"Label and Background Updating","order":2}}},{"node":{"fields":{"slug":"/en/examples/case/customFlow"},"frontmatter":{"title":"Custom Fow Graph","order":2}}},{"node":{"fields":{"slug":"/zh/examples/case/customFlow"},"frontmatter":{"title":"自定义流向图","order":2}}},{"node":{"fields":{"slug":"/en/examples/net/furchtermanLayout"},"frontmatter":{"title":"Fruchterman Layout","order":2}}},{"node":{"fields":{"slug":"/zh/examples/net/furchtermanLayout"},"frontmatter":{"title":"Fruchterman 图布局","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/layout"},"frontmatter":{"title":"Utilizing Layout","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/layout"},"frontmatter":{"title":"使用图布局 Layout","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-edge"},"frontmatter":{"title":"Custom Edge","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/custom-edge"},"frontmatter":{"title":"自定义边","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/supportIE"},"frontmatter":{"title":"Use G6 with IE","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/supportIE"},"frontmatter":{"title":"如何让 IE 支持 G6","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/ellipse"},"frontmatter":{"title":"Ellipse","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/ellipse"},"frontmatter":{"title":"Ellipse","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/quaratic"},"frontmatter":{"title":"Quadratic","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/quaratic"},"frontmatter":{"title":"Quadratic","order":3}}},{"node":{"fields":{"slug":"/en/examples/tree/indented"},"frontmatter":{"title":"Indented","order":3}}},{"node":{"fields":{"slug":"/zh/examples/tree/indented"},"frontmatter":{"title":"缩进树","order":3}}},{"node":{"fields":{"slug":"/en/examples/shape/customEdge"},"frontmatter":{"title":"Custom Edge","order":3}}},{"node":{"fields":{"slug":"/zh/examples/shape/customEdge"},"frontmatter":{"title":"自定义边","order":3}}},{"node":{"fields":{"slug":"/zh/examples/net/radialLayout"},"frontmatter":{"title":"Radial 辐射布局","order":3}}},{"node":{"fields":{"slug":"/en/examples/net/radialLayout"},"frontmatter":{"title":"Radial Layout","order":3}}},{"node":{"fields":{"slug":"/en/examples/interaction/nodeGroup"},"frontmatter":{"title":"Node Group","order":3}}},{"node":{"fields":{"slug":"/zh/examples/interaction/nodeGroup"},"frontmatter":{"title":"节点分组","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/elementIndex"},"frontmatter":{"title":"节点与边的层级","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/elementIndex"},"frontmatter":{"title":"The Visual Level of Node and Edge","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/multi-line"},"frontmatter":{"title":"两节点间存在多条边","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/multi-line"},"frontmatter":{"title":"Multiple Edges between Two Nodes","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/diamond"},"frontmatter":{"title":"Diamond","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/diamond"},"frontmatter":{"title":"Diamond","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/cubic"},"frontmatter":{"title":"Cubic","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/cubic"},"frontmatter":{"title":"Cubic","order":4}}},{"node":{"fields":{"slug":"/zh/docs/api/shapeProperties"},"frontmatter":{"title":"各图形属性","order":4}}},{"node":{"fields":{"slug":"/en/docs/api/shapeProperties"},"frontmatter":{"title":"Shape Properties","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/behavior"},"frontmatter":{"title":"图的交互 Behavior","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/behavior"},"frontmatter":{"title":"Interaction Behavior","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/states/defaultBehavior"},"frontmatter":{"title":"Built-in Behavior","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/defaultBehavior"},"frontmatter":{"title":"内置的 Behavior","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-layout"},"frontmatter":{"title":"Custom Layout","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/custom-layout"},"frontmatter":{"title":"自定义布局 Layout","order":4}}},{"node":{"fields":{"slug":"/en/examples/tree/radialtree"},"frontmatter":{"title":"Radial Tree","order":4}}},{"node":{"fields":{"slug":"/zh/examples/tree/radialtree"},"frontmatter":{"title":"辐射树","order":4}}},{"node":{"fields":{"slug":"/zh/examples/shape/label"},"frontmatter":{"title":"超长文本","order":4}}},{"node":{"fields":{"slug":"/en/examples/shape/label"},"frontmatter":{"title":"Long Label","order":4}}},{"node":{"fields":{"slug":"/en/examples/interaction/partialResponse"},"frontmatter":{"title":"Region Response","order":4}}},{"node":{"fields":{"slug":"/zh/examples/interaction/partialResponse"},"frontmatter":{"title":"响应区域事件","order":4}}},{"node":{"fields":{"slug":"/en/examples/net/circular"},"frontmatter":{"title":"Circular Layout","order":4}}},{"node":{"fields":{"slug":"/zh/examples/net/circular"},"frontmatter":{"title":"Circular 环形布局","order":4}}},{"node":{"fields":{"slug":"/en/examples/scatter/changePosition"},"frontmatter":{"title":"Change Node Positions","order":4}}},{"node":{"fields":{"slug":"/zh/examples/scatter/changePosition"},"frontmatter":{"title":"改变节点位置","order":4}}},{"node":{"fields":{"slug":"/zh/docs/api/Behavior"},"frontmatter":{"title":"Behavior","order":5}}},{"node":{"fields":{"slug":"/en/docs/api/Behavior"},"frontmatter":{"title":"Behavior","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/plugins"},"frontmatter":{"title":"Plugins and Tools","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/plugins"},"frontmatter":{"title":"插件与工具","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/states/mode"},"frontmatter":{"title":"Interaction Mode","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/mode"},"frontmatter":{"title":"交互模式 Mode","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edgeVisible"},"frontmatter":{"title":"The Visibility","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edgeVisible"},"frontmatter":{"title":"显示与隐藏","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-behavior"},"frontmatter":{"title":"Custom Behavior","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/custom-behavior"},"frontmatter":{"title":"自定义交互 Behavior","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/build-error"},"frontmatter":{"title":"Building Error","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/build-error"},"frontmatter":{"title":"Build 报错","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/triangle"},"frontmatter":{"title":"Triangle","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/arc"},"frontmatter":{"title":"Arc","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/triangle"},"frontmatter":{"title":"Triangle","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/arc"},"frontmatter":{"title":"Arc","order":5}}},{"node":{"fields":{"slug":"/en/examples/tree/customItemTree"},"frontmatter":{"title":"Custom Tree Items","order":5}}},{"node":{"fields":{"slug":"/zh/examples/tree/customItemTree"},"frontmatter":{"title":"定制树图元素样式","order":5}}},{"node":{"fields":{"slug":"/en/examples/interaction/position"},"frontmatter":{"title":"Move Nodes","order":5}}},{"node":{"fields":{"slug":"/zh/examples/interaction/position"},"frontmatter":{"title":"移动位置","order":5}}},{"node":{"fields":{"slug":"/zh/examples/net/gridLayout"},"frontmatter":{"title":"Grid 网格布局","order":5}}},{"node":{"fields":{"slug":"/en/examples/net/gridLayout"},"frontmatter":{"title":"Grid","order":5}}},{"node":{"fields":{"slug":"/en/examples/scatter/customAnimate"},"frontmatter":{"title":"Custom Animation","order":5}}},{"node":{"fields":{"slug":"/zh/examples/scatter/customAnimate"},"frontmatter":{"title":"自定义动画","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/animation"},"frontmatter":{"title":"动画（选读）","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/animation"},"frontmatter":{"title":"Animation*","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/state"},"frontmatter":{"title":"状态 State","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/states/state"},"frontmatter":{"title":"State","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/front-edge"},"frontmatter":{"title":"Render the Edge on the Top","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/front-edge"},"frontmatter":{"title":"如何设置 Edge 前置","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/star"},"frontmatter":{"title":"Star","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/star"},"frontmatter":{"title":"Star","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/loop"},"frontmatter":{"title":"Loop","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/loop"},"frontmatter":{"title":"Loop","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/Event"},"frontmatter":{"title":"Event","order":6}}},{"node":{"fields":{"slug":"/zh/docs/api/Event"},"frontmatter":{"title":"Event","order":6}}},{"node":{"fields":{"slug":"/en/examples/net/concentricLayout"},"frontmatter":{"title":"Concentric Layout","order":6}}},{"node":{"fields":{"slug":"/zh/examples/net/concentricLayout"},"frontmatter":{"title":"Concentric 同心圆布局","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/Shape"},"frontmatter":{"title":"Shape","order":7}}},{"node":{"fields":{"slug":"/zh/docs/api/Shape"},"frontmatter":{"title":"Shape","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/epilog"},"frontmatter":{"title":"结语","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/epilog"},"frontmatter":{"title":"Conclusion","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/mode-and-custom-behavior"},"frontmatter":{"title":"Interaction Mode","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/mode-and-custom-behavior"},"frontmatter":{"title":"交互模式 Mode","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/image"},"frontmatter":{"title":"Image","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/image"},"frontmatter":{"title":"Image","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/layout"},"frontmatter":{"title":"使用布局 Layout","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/layout"},"frontmatter":{"title":"Utilizing Layout","order":7}}},{"node":{"fields":{"slug":"/en/examples/net/mdsLayout"},"frontmatter":{"title":"MDS Layout","order":7}}},{"node":{"fields":{"slug":"/zh/examples/net/mdsLayout"},"frontmatter":{"title":"MDS 布局","order":7}}},{"node":{"fields":{"slug":"/en/docs/api/Group"},"frontmatter":{"title":"Graphics Group","order":8}}},{"node":{"fields":{"slug":"/zh/docs/api/Group"},"frontmatter":{"title":"Graphics Group","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/nodeGroup"},"frontmatter":{"title":"节点分组 Group","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/nodeGroup"},"frontmatter":{"title":"Node Group","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/create-node-group"},"frontmatter":{"title":"Create Node Group","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/create-node-group"},"frontmatter":{"title":"手动创建节点分组 Group","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/animation"},"frontmatter":{"title":"基础动画","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/modelRect"},"frontmatter":{"title":"ModelRect","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/modelRect"},"frontmatter":{"title":"ModelRect","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/animation"},"frontmatter":{"title":"Basic Animation","order":8}}},{"node":{"fields":{"slug":"/zh/examples/net/arcDiagram"},"frontmatter":{"title":"Arc Diagram 弧线图","order":8}}},{"node":{"fields":{"slug":"/en/examples/net/arcDiagram"},"frontmatter":{"title":"Arc Diagram","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/g6InReact"},"frontmatter":{"title":"G6 in React","order":9}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/g6InReact"},"frontmatter":{"title":"React 中使用 G6","order":9}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/iconfont"},"frontmatter":{"title":"Utilizing Iconfont","order":9}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/iconfont"},"frontmatter":{"title":"使用 Iconfont","order":9}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/lock-node"},"frontmatter":{"title":"Lock Node","order":10}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/lock-node"},"frontmatter":{"title":"Lock Node","order":10}}},{"node":{"fields":{"slug":"/zh/docs/api/Custom"},"frontmatter":{"title":"自定义机制","order":10}}},{"node":{"fields":{"slug":"/en/docs/api/Custom"},"frontmatter":{"title":"Custom Mechanism","order":10}}},{"node":{"fields":{"slug":"/zh/examples/net/layoutMechanism"},"frontmatter":{"title":"布局机制","order":19}}},{"node":{"fields":{"slug":"/en/examples/net/layoutMechanism"},"frontmatter":{"title":"Layout Mechanism","order":19}}},{"node":{"fields":{"slug":"/en/examples/tree/radialtree/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/radialtree/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/mindmap/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/mindmap/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/indented/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/indented/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/dendrogram/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/dendrogram/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/compactBox/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/compactBox/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/radialLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/radialLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/mdsLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/mdsLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/gridLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/gridLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/furchtermanLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/furchtermanLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/forceDirected/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/forceDirected/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/dagreFlow/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/dagreFlow/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/concentricLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/concentricLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/circular/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/circular/API"},"frontmatter":{"title":"API","order":null}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"prev":{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/state"},"frontmatter":{"title":"状态 State","order":6},"html":"<h2 id=\"什么是-state\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AF-state\" aria-label=\"什么是 state permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是 state</h2>\n<p>G6 中的 <strong>state</strong>，指的是状态，包括<strong>交互状态</strong>和<strong>业务状态</strong>两种。</p>\n<p>在 G6 中，配置交互状态和业务状态的方式是相同的。对于部分只使用 G6 来完成某个需求的开发，而不想深入理解G6的用户，其实不用区分交互状态和业务状态的区别，使用相同的方式定义状态，使用相同的方式使用状态，完全没有理解成本。</p>\n<h3 id=\"交互状态\"><a href=\"#%E4%BA%A4%E4%BA%92%E7%8A%B6%E6%80%81\" aria-label=\"交互状态 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>交互状态</h3>\n<p>交互状态是与具体的交互动作密切相关的，如用户使用鼠标选中某个节点，hover 到某条边。</p>\n<p>G6 中默认处理的是交互状态。</p>\n<h3 id=\"业务状态\"><a href=\"#%E4%B8%9A%E5%8A%A1%E7%8A%B6%E6%80%81\" aria-label=\"业务状态 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>业务状态</h3>\n<p>指根据用户业务需求自定义的状态。业务状态是与交互动作无关的，与具体业务逻辑强相关的，也可理解为是强数据驱动的。如某个任务的执行状态、某条申请的审批状态等，不同的数据值代表不同的业务状态。业务状态与用户交互动作无关，但在 G6 中的处理方式同交互状态一致。</p>\n<h2 id=\"何时使用-state\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8-state\" aria-label=\"何时使用 state permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用 state</h2>\n<p>判断是否该使用 state 的原则很简单，从交互和业务两个层面来看：</p>\n<ul>\n<li>某个交互动作要改变节点或边的样式及属性；</li>\n<li>呈现给用户的内容会根据数据改变（如 1 代表成功，0 代表失败）。</li>\n</ul>\n<p>满足上述条件其一，则应该使用 state。</p>\n<h2 id=\"使用-state\"><a href=\"#%E4%BD%BF%E7%94%A8-state\" aria-label=\"使用 state permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 state</h2>\n<p><strong>使用 <code class=\"language-text\">graph.setItemState</code> 来使定义的状态生效</strong>。该函数可以在监听函数 <code class=\"language-text\">graph.on</code> 中被调用吗，也可以在另一种是在自定义 Behavior 中调用，或在其他任意地方用于响应交互/业务的变化。</p>\n<h3 id=\"graphon\"><a href=\"#graphon\" aria-label=\"graphon permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>graph.on</h3>\n<p>在回调函数中使定义的交互状态 hover 生效。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">graph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:mouseenter'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">evt</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> item <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">;</span>\n  graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:mouseleave'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">evt</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> item <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">;</span>\n  graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3 id=\"behavior\"><a href=\"#behavior\" aria-label=\"behavior permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Behavior</h3>\n<p>在自定义 Behavior 中使定义的交互状态 selected 生效。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerBehavior</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nodeClick'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">getEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'node:click'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'onClick'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">shouldUpdate</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> item <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>graph<span class=\"token punctuation\">;</span>\n    graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token string\">'selected'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"配置不同-state-的样式\"><a href=\"#%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%90%8C-state-%E7%9A%84%E6%A0%B7%E5%BC%8F\" aria-label=\"配置不同 state 的样式 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置不同 state 的样式</h2>\n<p>上小节使用 <code class=\"language-text\">graph.setItemState</code> 使某些状态在元素上生效/失效，仅仅是为该元素做了某些状态的标识。为了将这些状态反应到终端用户所见的视觉空间中，我们需要为不同的状态设置不同的元素样式，以响应元素状态的变化。</p>\n<p>在 G6 中，有两种方式配置不同状态的样式：</p>\n<ul>\n<li>在实例化 Graph 时，通过 <code class=\"language-text\">nodeStateStyles</code> 和 <code class=\"language-text\">edgeStateStyles</code> 定义；</li>\n<li>在自定义节点时，在 options 配置项的 <code class=\"language-text\">stateStyles</code> 中定义状态。</li>\n</ul>\n<h3 id=\"实例化-graph-时定义-state-样式\"><a href=\"#%E5%AE%9E%E4%BE%8B%E5%8C%96-graph-%E6%97%B6%E5%AE%9A%E4%B9%89-state-%E6%A0%B7%E5%BC%8F\" aria-label=\"实例化 graph 时定义 state 样式 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实例化 Graph 时定义 state 样式</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token punctuation\">:</span> <span class=\"token string\">'mountNode'</span><span class=\"token punctuation\">,</span>\n  width<span class=\"token punctuation\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token punctuation\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n  defaultNode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'diamond'</span><span class=\"token punctuation\">,</span>\n    style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 默认状态样式</span>\n      fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  nodeStateStyles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    hover<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// hover 状态为 true 时的样式</span>\n      fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'#d3adf7'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    running<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// running 状态为 true 时的样式</span>\n      stroke<span class=\"token punctuation\">:</span> <span class=\"token string\">'steelblue'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>上面的实例代码中，我们在实例化 Graph 时候，通过 <code class=\"language-text\">nodeStateStyles</code> 定义了交互状态 <code class=\"language-text\">hover</code> 和业务状态 <code class=\"language-text\">running</code> 的样式，当用户操作过程中，鼠标 <code class=\"language-text\">hover</code> 到某个节点上时，节点的填充色就会变为指定的颜色，当某个任务状态变为正在执行时，节点的边框就会变为 <code class=\"language-text\">running</code> 状态定义的颜色。<br /><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*Beu6QY_ETOgAAAAAAAAAAABkARQnAQ' width=150/></p>\n<p>同理，<code class=\"language-text\">defaultEdge</code> 中的 <code class=\"language-text\">style</code> 属性定义了默认状态下边的样式，使用 <code class=\"language-text\">edgeStateStyles</code> 可以定义不同状态下边的样式。</p>\n<h3 id=\"自定义节点和边时定义-state-样式\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8A%82%E7%82%B9%E5%92%8C%E8%BE%B9%E6%97%B6%E5%AE%9A%E4%B9%89-state-%E6%A0%B7%E5%BC%8F\" aria-label=\"自定义节点和边时定义 state 样式 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义节点和边时定义 state 样式</h3>\n<p>下面代码是在自定义节点时候通过 <code class=\"language-text\">stateStyles</code> 定义的交互状态 <code class=\"language-text\">hover</code> 和 <code class=\"language-text\">selected</code> 时该类型节点的样式。用户在操作过程中，如果 hover 到某个节点，则节点的透明度会变为 0.8。如果选中某个节点，选中节点的边框宽度变为 3。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">'customShape'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 自定义节点时的配置</span>\n  options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    size<span class=\"token punctuation\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n    style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      lineWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    stateStyles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 鼠标 hover 状态下的配置</span>\n      hover<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        fillOpacity<span class=\"token punctuation\">:</span> <span class=\"token number\">0.8</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// 选中节点状态下的配置</span>\n      selected<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        lineWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*1DFnTKfmfLcAAAAAAAAAAABkARQnAQ' width=150/>\n<h2 id=\"小结\"><a href=\"#%E5%B0%8F%E7%BB%93\" aria-label=\"小结 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>小结</h2>\n<p>G6 底层提供了状态管理的能力，通过使用 state，简化了状态管理，降低了用户的认知成本。更多关于 G6 中状态的内容请参考 <a href='https://www.yuque.com/antv/g6/xiux28' target='_blank'>G6 状态量思考</a>。</p>"}},"next":{"node":{"fields":{"slug":"/zh/docs/manual/middle/keyconcept/shape-keyshape"},"frontmatter":{"title":"图形 Shape 与 keyShape","order":0},"html":"<h2 id=\"图形-shape\"><a href=\"#%E5%9B%BE%E5%BD%A2-shape\" aria-label=\"图形 shape permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>图形 Shape</h2>\n<p>Shape 指 G6 中的图形、形状，它可以是圆形、矩形、路径等。它一般与 G6 中的节点、边相关。<strong>G6 中的每一种节点或边由一个或多个 Shape 组成。节点、边、标签文本的配置都会被体现到对应的图形上。</strong></p>\n<p>例如下图（左）的节点包含了一个圆形图形；下图（中）的节点含有有一个圆形和一个文本图形；下图（右）的节点中含有 5 个圆形（蓝绿色的圆和上下左右四个锚点）、一个文本图形。但每种节点和边都会有自己的唯一关键图形 keyShape，下图中三个节点的 keyShape 都是蓝绿色的圆，keyShape 主要用于交互检测、样式随<a href=\"/zh/docs/manual/middle/states/state\">状态</a>自动更新等，见 <a href=\"#keyshape\">keyShape</a>。<br /><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*OcaaTIIu_4cAAAAAAAAAAABkARQnAQ' width=50/>     <img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*r5M0Sowd1R8AAAAAAAAAAABkARQnAQ' width=50/>      <img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*pHoETad75CIAAAAAAAAAAABkARQnAQ' width=50/></p>\n<blockquote>\n<p>（左）只含有一个圆形图形的节点，keyShape 是该圆形。（中）含有圆形和文本图形的节点，keyShape 是圆形。（右）含有主要圆形、文本、上下左右四个小圆形的节点，keyShape 是圆形。</p>\n</blockquote>\n<p>G6 使用不同的 shape 及组合，设计了多种内置的节点和边。G6 内置节点的有 'circle'， 'rect'，'ellipse'，...（详见 <a href=\"/zh/docs/manual/middle/elements/nodes/defaultNode\">内置节点</a>）；内置边的有 'line'，'polyline'，'cubic'，...（详见 <a href=\"/zh/docs/manual/middle/elements/edges/defaultEdge\">内置边</a>）。</p>\n<p>除了使用内置的节点和边外，G6 还允许用户通过自己搭配和组合 Shape 进行节点和边的自定义，详见 <a href=\"/zh/docs/manual/advanced/custom-node\">自定义节点</a> 和 <a href=\"/zh/docs/manual/advanced/custom-edge\">自定义边</a>。</p>\n<h2 id=\"keyshape\"><a href=\"#keyshape\" aria-label=\"keyshape permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>KeyShape</h2>\n<p>如上所述，每一种节点和边都有一个唯一的关键图形 keyShape。keyShape 是在节点的 <code class=\"language-text\">draw()</code> 方法中返回的图形对象。它有两个主要特点：</p>\n<h3 id=\"响应样式\"><a href=\"#%E5%93%8D%E5%BA%94%E6%A0%B7%E5%BC%8F\" aria-label=\"响应样式 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>响应样式</h3>\n<p>内置节点/边配置项中的 <code class=\"language-text\">style</code> 属性将只体现在它的 keyShape 上。且内置节点/边的状态样式 （图实例的 <code class=\"language-text\">nodeStateStyles</code> / <code class=\"language-text\">edgeStateStyles</code> 或元素自身的 <code class=\"language-text\">stateStyles</code>) 也仅体现在它的 keyShape 上。</p>\n<p>想要改变这一规则，可以 <a href=\"/zh/docs/manual/advanced/custom-node\">自定义节点</a> / <a href=\"/zh/docs/manual/advanced/custom-edge\">自定义边</a>。</p>\n<h4 id=\"示例\"><a href=\"#%E7%A4%BA%E4%BE%8B\" aria-label=\"示例 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>示例</h4>\n<p>该示例使用了内置 rect 节点，的节点的 keyShape 是中间的 rect，其他 Shape 包括上下左右四个 circle 以及一个 text。代码设置了节点的样式 <code class=\"language-text\">style</code>，仅在 rect 上生效，其他 Shape 都以默认样式渲染。该节点上的其他图形需要使用其他配置项进行配置。例如，上下左右四个 circle 的样式需要在 <code class=\"language-text\">linkPoints</code> 中配置，文本样式需要在 <code class=\"language-text\">labelCfg</code> 中配置。代码中还监听了鼠标的进入节点和离开节点事件，触发了 hover 状态后 <code class=\"language-text\">nodeStateStyles</code> 里 hover 的对应样式仅在 keyShape 上生效。</p>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*wWckTbi910IAAAAAAAAAAABkARQnAQ' alt='keyshape-demo' with='50'/>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span>\n      style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 仅在 keyShape 上生效</span>\n        fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'lightblue'</span><span class=\"token punctuation\">,</span>\n        stroke<span class=\"token punctuation\">:</span> <span class=\"token string\">'#888'</span><span class=\"token punctuation\">,</span>\n        lineWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        radius<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      linkPoints<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        top<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        bottom<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        left<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        right<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// ... 四个圆的样式可以在这里指定</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// labelCfg: {...} // 标签的样式可以在这里指定</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token punctuation\">:</span> <span class=\"token string\">'mountNode'</span><span class=\"token punctuation\">,</span>\n  width<span class=\"token punctuation\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token punctuation\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n  nodeStateStyles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 各状态下的样式，仅在 keyShape 上生效</span>\n    hover<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      fillOpacity<span class=\"token punctuation\">:</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span>\n      lineWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 监听鼠标进入节点事件</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:mouseenter'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">evt</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 激活该节点的 hover 状态</span>\n  graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 监听鼠标离开节点事件</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:mouseleave'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">evt</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 关闭该节点的 hover 状态</span>\n  graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3 id=\"包围盒确定\"><a href=\"#%E5%8C%85%E5%9B%B4%E7%9B%92%E7%A1%AE%E5%AE%9A\" aria-label=\"包围盒确定 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>包围盒确定</h3>\n<p><strong>确定节点的包围盒（Bounding Box） —— bbox（x, y, width, height)</strong> ，从而计算相关边的连入点（与相关边的交点）。若 keyShape 不同，节点与边的交点计算结果不同。 </p>\n<h4 id=\"示例-1\"><a href=\"#%E7%A4%BA%E4%BE%8B-1\" aria-label=\"示例 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>示例 </h4>\n<p>本例中的一个节点由一个 rect 图形和一个带灰色描边、填充透明的 circle 图形构成。</p>\n<ul>\n<li>当节点的 keyShape 为 circle 时：</li>\n</ul>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*CY7cSaMs4U0AAAAAAAAAAABkARQnAQ' width=220/>\n<ul>\n<li>当节点的 keyShape 为 rect 时：</li>\n</ul>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*upWTQLTvxGEAAAAAAAAAAABkARQnAQ' width=250/>\n<h2 id=\"shape-的生命周期\"><a href=\"#shape-%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\" aria-label=\"shape 的生命周期 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Shape 的生命周期</h2>\n<blockquote>\n<p>当用户需要<a href=\"/zh/docs/manual/advanced/custom-node\">自定义节点</a>和<a href=\"/zh/docs/manual/advanced/custom-edge\">自定义边</a>时，需要了解 Shape 的生命周期。使用内置节点和边则可以跳过这一部分内容。</p>\n</blockquote>\n<p>从整体来看，Shape 的生命周期分为：</p>\n<ul>\n<li>初始化渲染；</li>\n<li>更新；</li>\n<li>操作；</li>\n<li>销毁。</li>\n</ul>\n<p>Shape 作为 Graph 上的核心元素，这几个阶段都需要考虑，但是销毁可以交给 Graph 来处理，所以在定义 Shape 时不需要考虑，仅需要考虑三个阶段即可：</p>\n<ul>\n<li>绘制：从无到有的绘制 Shape 及文本；</li>\n<li>更新：数据发生改变导致 Shape 及文本发生变化；</li>\n<li>操作：给 Shape 添加状态，如：selected，active 等。</li>\n</ul>\n<p>所以我们在设计自定义节点和边时，定义了三个方法，若需要自定义节点和边，需要有选择性地复写它们：</p>\n<ul>\n<li><code class=\"language-text\">draw(cfg, group)</code>: 绘制，提供了绘制的配置项（数据定义时透传过来）和图形容器；</li>\n<li><code class=\"language-text\">update(cfg, n)</code>: 更新，更新时的配置项（更新的字段和原始字段的合并）和元素对象；</li>\n<li><code class=\"language-text\">setState(name, value, item)</code>: 响应节点状态的变化。</li>\n</ul>\n<p>关于自定义 Shape 更多的方法请参考 <a href=\"/zh/docs/api/Shape\">Shape API</a>。</p>"}}}}}