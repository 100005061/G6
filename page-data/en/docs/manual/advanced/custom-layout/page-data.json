{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-9-102-antv-gatsby-theme-antv-site-templates-document-tsx","path":"/en/docs/manual/advanced/custom-layout","result":{"data":{"site":{"siteMetadata":{"title":"G6","githubUrl":"https://github.com/antvis/g6","docs":[{"slug":"manual/FAQ","title":{"zh":"FAQ","en":"FAQ"},"order":2},{"slug":"manual/tutorial","title":{"zh":"入门教程","en":"Tutorial"},"order":3},{"slug":"manual/middle","title":{"zh":"核心概念","en":"Middle"},"order":4},{"slug":"manual/middle/states","title":{"zh":"交互与事件","en":"Behavior & Event"},"order":4},{"slug":"manual/middle/elements","title":{"zh":"节点与边","en":"Graph Element"},"order":null},{"slug":"manual/middle/elements/nodes","title":{"zh":"内置节点","en":"Default Node"},"order":2},{"slug":"manual/middle/elements/edges","title":{"zh":"内置边","en":"Default Edge"},"order":3},{"slug":"manual/advanced","title":{"zh":"高级指引","en":"Advanced"},"order":5},{"slug":"manual/cases","title":{"zh":"综合应用","en":"Cases"},"order":6},{"slug":"api","title":{"zh":"API 文档","en":"API Doc"},"order":null},{"slug":"api/nodeEdge","title":{"zh":"节点和边","en":"Node & Edge"},"order":4},{"slug":"api/layout","title":{"zh":"Layout","en":"Layout"},"order":4},{"slug":"api/properties","title":{"zh":"属性配置项","en":"Properties"},"order":10}]},"pathPrefix":""},"markdownRemark":{"html":"<p>G6 provides abundant commonly used built-in layouts for Graph and TreeGraph respectively. The usage can be found in: <a href=\"/en/docs/manual/middle/layout\">Utilize Layout</a>, <a href=\"/en/docs/api/Layout\">Layout API</a>. Custom layout mechanism of G6 allows the users to design their own type of layout to meet their special requirements.</p>\n<p><span style=\"background-color: rgb(251, 233, 231); color: rgb(139, 53, 56)\">   ⚠️<strong>Attention:</strong> </span>\nThe TreeGraph does not support custom layout temporarily.</p>\n<p>In this document, we will introduce the custom layout by registering a layout for Bigraph.</p>\n<h2 id=\"the-api-of-cumstom-layout\"><a href=\"#the-api-of-cumstom-layout\" aria-label=\"the api of cumstom layout permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The API of Cumstom Layout</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * Register a Layout\n * @param {string} type The layout type is must assigned to an unique string\n * @param {object} layout The layout method\n */</span>\nLayout<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">registerLayout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n   * The default configurations of the custom layout. It will be mixed by the configurations from users\n   */</span>\n  <span class=\"token function\">getDefaultCfg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">/**\n   * Initialize\n   * @param {object} data data\n   */</span>\n  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">/**\n   * Execute the layout\n   */</span>\n  <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">/**\n   * Layout with the data\n   * @param {object} data 数据\n   */</span>\n  <span class=\"token function\">layout</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">/**\n   * Update the layout configurations, but do not execute the layout\n   * @param {object} cfg The new configurations\n   */</span>\n  <span class=\"token function\">updateCfg</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">/**\n   * Destroy\n   */</span>\n  <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"custom-layout\"><a href=\"#custom-layout\" aria-label=\"custom layout permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Layout</h2>\n<p>Now, we are going to register a layout for Bigraph. Bigraph is the graph with nodes divided into two parts. There will be no edges between the nodes which are belong to the same part. In the custom layout, we sort the nodes according to their topology to reduce the edge crossings.<br /></p>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*FksvTrdkqXgAAAAAAAAAAABkARQnAQ' alt='img' width='350'/>\n<p>The data of the Bigraph is shown below, where the nodes are divided into <code class=\"language-text\">&#39;part1&#39;</code> and <code class=\"language-text\">&#39;part2&#39;</code> by the property <code class=\"language-text\">cluster</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">:</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> cluster<span class=\"token punctuation\">:</span> <span class=\"token string\">'part1'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">:</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> cluster<span class=\"token punctuation\">:</span> <span class=\"token string\">'part1'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">:</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span> cluster<span class=\"token punctuation\">:</span> <span class=\"token string\">'part1'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">:</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span> cluster<span class=\"token punctuation\">:</span> <span class=\"token string\">'part1'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">:</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span> cluster<span class=\"token punctuation\">:</span> <span class=\"token string\">'part1'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">,</span> cluster<span class=\"token punctuation\">:</span> <span class=\"token string\">'part1'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'6'</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> cluster<span class=\"token punctuation\">:</span> <span class=\"token string\">'part2'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'7'</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">:</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> cluster<span class=\"token punctuation\">:</span> <span class=\"token string\">'part2'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'8'</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">:</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> cluster<span class=\"token punctuation\">:</span> <span class=\"token string\">'part2'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">:</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span> cluster<span class=\"token punctuation\">:</span> <span class=\"token string\">'part2'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  edges<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'6'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'7'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'9'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'6'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'9'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'7'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'8'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'9'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'6'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'8'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'6'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'7'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> source<span class=\"token punctuation\">:</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token string\">'9'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3 id=\"requirements-analysis\"><a href=\"#requirements-analysis\" aria-label=\"requirements analysis permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Requirements Analysis</h3>\n<p>To reduce the edge crossings, we sort the nodes in <code class=\"language-text\">part1</code> and <code class=\"language-text\">part2</code> respectively. The process is:</p>\n<ul>\n<li>Step 1: Assign the index from 0 randomly for the nodes in <code class=\"language-text\">&#39;part1&#39;</code> and <code class=\"language-text\">&#39;part2&#39;</code> respectively;</li>\n<li>\n<p>Step 2: Traverse the nodes in <code class=\"language-text\">&#39;part1&#39;</code>. For each node A:</p>\n<ul>\n<li>Find the set of related nodes of A (connect to A directly) in <code class=\"language-text\">&#39;part2&#39;</code> <img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*-WOhQIGg9l8AAAAAAAAAAABkARQnAQ\">. Sum up the indexes of the nodes in <img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*-WOhQIGg9l8AAAAAAAAAAABkARQnAQ\">, and divided it by the number of elements in <img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*-WOhQIGg9l8AAAAAAAAAAABkARQnAQ\">. Replace the index of A by the result: <img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*VfXiSK1f02cAAAAAAAAAAABkARQnAQ\"></li>\n</ul>\n</li>\n<li>\n<p>Step 3: Tranverse the nodes in <code class=\"language-text\">&#39;part2&#39;</code>. For each node A(Similar to the Step 2):</p>\n<ul>\n<li>Find the set of related nodes of B (connect to B directly) in <code class=\"language-text\">&#39;part1&#39;</code> <img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*GqZiSKI-nB8AAAAAAAAAAABkARQnAQ\">. Sum up the indexes of the nodes in <img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*GqZiSKI-nB8AAAAAAAAAAABkARQnAQ\">, and divided it by the number of elements in <img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*GqZiSKI-nB8AAAAAAAAAAABkARQnAQ\">. Replace the index of A by the result: <img src=\"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*-8b2Spfb4HIAAAAAAAAAAABkARQnAQ\"></li>\n</ul>\n</li>\n<li>Step 4: Sort the nodes in <code class=\"language-text\">part1</code> and <code class=\"language-text\">part2</code> respectively according to their indexed. The result order determine the postions of the nodes in the final layout.</li>\n</ul>\n<h2 id=\"implementation\"><a href=\"#implementation\" aria-label=\"implementation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implementation</h2>\n<p>The following code below register a layout named <code class=\"language-text\">&#39;bigraph-layout&#39;</code> for Bigraph. The complete code can be found in: <a href=\"/en/examples/net/layoutMechanism#customBigraph\">Cusom Layout-Bigraph</a>. The usage of custom layout is the same as built-in layouts: configure the <code class=\"language-text\">layout</code> to the graph when instantiating. Refer to: <a href=\"/en/docs/manual/middle/layout\">Utilize Layout</a>。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerLayout</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bigraph-layout'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Default configurations</span>\n  <span class=\"token function-variable function\">getDefaultCfg</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getDefaultCfg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      center<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The center of the layout</span>\n      biSep<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The separation of these two parts</span>\n      nodeSep<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The separation between nodes in the same part</span>\n      direction<span class=\"token punctuation\">:</span> <span class=\"token string\">'horizontal'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The direction of the two parts</span>\n      nodeSize<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The node size</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Execute the layout</span>\n  <span class=\"token function-variable function\">execute</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> center <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> biSep <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>biSep<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nodeSep <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>nodeSep<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nodeSize <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>nodeSize<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> part1Pos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      part2Pos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Layout the graph in horizontally</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">===</span> <span class=\"token string\">'horizontal'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      part1Pos <span class=\"token operator\">=</span> center<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> biSep <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n      part2Pos <span class=\"token operator\">=</span> center<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> biSep <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> nodes <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> edges <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> part1Nodes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> part2Nodes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> part1NodeMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> part2NodeMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Separate the nodes and init the positions</span>\n    nodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>cluster <span class=\"token operator\">===</span> <span class=\"token string\">'part1'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        part1Nodes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        part1NodeMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        part2Nodes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        part2NodeMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Sort the nodes in part1</span>\n    part1Nodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p1n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> adjCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      edges<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">edge</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> sourceId <span class=\"token operator\">=</span> edge<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> targetId <span class=\"token operator\">=</span> edge<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sourceId <span class=\"token operator\">===</span> p1n<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          index <span class=\"token operator\">+=</span> part2NodeMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>targetId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          adjCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>targetId <span class=\"token operator\">===</span> p1n<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          index <span class=\"token operator\">+=</span> part2NodeMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>sourceId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          adjCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      index <span class=\"token operator\">/=</span> adjCount<span class=\"token punctuation\">;</span>\n      p1n<span class=\"token punctuation\">.</span>index <span class=\"token operator\">=</span> index<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    part1Nodes<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>index <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Sort the nodes in part2</span>\n    part2Nodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p2n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> adjCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      edges<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">edge</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> sourceId <span class=\"token operator\">=</span> edge<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> targetId <span class=\"token operator\">=</span> edge<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sourceId <span class=\"token operator\">===</span> p2n<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          index <span class=\"token operator\">+=</span> part1NodeMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>targetId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          adjCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>targetId <span class=\"token operator\">===</span> p2n<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          index <span class=\"token operator\">+=</span> part1NodeMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>sourceId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          adjCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      index <span class=\"token operator\">/=</span> adjCount<span class=\"token punctuation\">;</span>\n      p2n<span class=\"token punctuation\">.</span>index <span class=\"token operator\">=</span> index<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    part2Nodes<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>index <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Place the ndoes</span>\n    <span class=\"token keyword\">var</span> hLength <span class=\"token operator\">=</span>\n      part1Nodes<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> part2Nodes<span class=\"token punctuation\">.</span>length\n        <span class=\"token operator\">?</span> part1Nodes<span class=\"token punctuation\">.</span>length\n        <span class=\"token punctuation\">:</span> part2Nodes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> height <span class=\"token operator\">=</span> hLength <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>nodeSep <span class=\"token operator\">+</span> nodeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> begin <span class=\"token operator\">=</span> center<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">===</span> <span class=\"token string\">'vertical'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      begin <span class=\"token operator\">=</span> center<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    part1Nodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p1n<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">===</span> <span class=\"token string\">'horizontal'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        p1n<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> part1Pos<span class=\"token punctuation\">;</span>\n        p1n<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> begin <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>nodeSep <span class=\"token operator\">+</span> nodeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        p1n<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> begin <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>nodeSep <span class=\"token operator\">+</span> nodeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p1n<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> part1Pos<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    part2Nodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p2n<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">===</span> <span class=\"token string\">'horizontal'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        p2n<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> part2Pos<span class=\"token punctuation\">;</span>\n        p2n<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> begin <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>nodeSep <span class=\"token operator\">+</span> nodeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        p2n<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> begin <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>nodeSep <span class=\"token operator\">+</span> nodeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p2n<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> part2Pos<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/en/docs/manual/advanced/custom-layout/#the-api-of-cumstom-layout\">The API of Cumstom Layout</a></li>\n<li>\n<p><a href=\"/en/docs/manual/advanced/custom-layout/#custom-layout\">Custom Layout</a></p>\n<ul>\n<li><a href=\"/en/docs/manual/advanced/custom-layout/#requirements-analysis\">Requirements Analysis</a></li>\n</ul>\n</li>\n<li><a href=\"/en/docs/manual/advanced/custom-layout/#implementation\">Implementation</a></li>\n</ul>","fields":{"slug":"/en/docs/manual/advanced/custom-layout","readingTime":{"text":"6 min read","time":326099.99999999994}},"frontmatter":{"title":"Custom Layout"},"parent":{"__typename":"File","relativePath":"manual/advanced/custom-layout.en.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/docs/manual/introduction"},"frontmatter":{"title":"Introduction","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/introduction"},"frontmatter":{"title":"简介","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/preface"},"frontmatter":{"title":"Preface","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/preface"},"frontmatter":{"title":"前言","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/keyConcept"},"frontmatter":{"title":"Key Concepts","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/keyConcept"},"frontmatter":{"title":"G6 中的关键概念","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/properties/NodeProperties"},"frontmatter":{"title":"Properties of Node","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/nodeEdge/Item"},"frontmatter":{"title":"Item","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/properties/NodeProperties"},"frontmatter":{"title":"节点属性","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/layout/Layout"},"frontmatter":{"title":"Layout","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/layout/Layout"},"frontmatter":{"title":"Layout","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/updateText"},"frontmatter":{"title":"如何更新文本样式","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/updateText"},"frontmatter":{"title":"Update Label","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/shape-and-properties"},"frontmatter":{"title":"Graphics Shape Properties","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/shape-and-properties"},"frontmatter":{"title":"关键概念-图形 Shape 及其属性","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/nodeEdge/Item"},"frontmatter":{"title":"Item","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/cases/sequenceTime"},"frontmatter":{"title":"基于 G6 的关系时序分析应用","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/cases/sequenceTime"},"frontmatter":{"title":"Dynamic Relationship Analysis Powered by G6","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/defaultNode"},"frontmatter":{"title":"Built-in Nodes","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/defaultNode"},"frontmatter":{"title":"内置节点总览","order":0}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/defaultEdge"},"frontmatter":{"title":"Built-in Edges","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/defaultEdge"},"frontmatter":{"title":"内置边总览","order":0}}},{"node":{"fields":{"slug":"/zh/examples/tool/tooltip"},"frontmatter":{"title":"提示框","order":0}}},{"node":{"fields":{"slug":"/en/examples/tool/tooltip"},"frontmatter":{"title":"Tooltip","order":0}}},{"node":{"fields":{"slug":"/zh/examples/shape/basic"},"frontmatter":{"title":"内置节点","order":0}}},{"node":{"fields":{"slug":"/en/examples/shape/basic"},"frontmatter":{"title":"Built-in Nodes","order":0}}},{"node":{"fields":{"slug":"/zh/examples/tree/compactBox"},"frontmatter":{"title":"紧凑树","order":0}}},{"node":{"fields":{"slug":"/en/examples/tree/compactBox"},"frontmatter":{"title":"CompactBox","order":0}}},{"node":{"fields":{"slug":"/en/examples/scatter/node"},"frontmatter":{"title":"Node Animation","order":0}}},{"node":{"fields":{"slug":"/zh/examples/scatter/node"},"frontmatter":{"title":"节点动画","order":0}}},{"node":{"fields":{"slug":"/zh/examples/case/metroLines"},"frontmatter":{"title":"地铁线路图","order":0}}},{"node":{"fields":{"slug":"/en/examples/case/metroLines"},"frontmatter":{"title":"Animated Metro Map","order":0}}},{"node":{"fields":{"slug":"/zh/examples/case/decisionBubbles"},"frontmatter":{"title":"图表决策","order":0}}},{"node":{"fields":{"slug":"/en/examples/case/decisionBubbles"},"frontmatter":{"title":"Visualization Decision","order":0}}},{"node":{"fields":{"slug":"/zh/examples/interaction/highlight"},"frontmatter":{"title":"高亮相邻节点","order":0}}},{"node":{"fields":{"slug":"/en/examples/interaction/highlight"},"frontmatter":{"title":"Highlight Nodes","order":0}}},{"node":{"fields":{"slug":"/en/examples/net/forceDirected"},"frontmatter":{"title":"Force-directed Layout","order":0}}},{"node":{"fields":{"slug":"/zh/examples/net/forceDirected"},"frontmatter":{"title":"力导向图布局","order":0}}},{"node":{"fields":{"slug":"/zh/docs/manual/getting-started"},"frontmatter":{"title":"快速上手","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/getting-started"},"frontmatter":{"title":"Getting Started","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/graph"},"frontmatter":{"title":"Graph","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/graph"},"frontmatter":{"title":"图 Graph","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/nodeEdge/Edge"},"frontmatter":{"title":"Edge","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/nodeEdge/Edge"},"frontmatter":{"title":"Edge","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/nodeEdge/Node"},"frontmatter":{"title":"Node","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/nodeEdge/Node"},"frontmatter":{"title":"Node","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/properties/EdgeProperties"},"frontmatter":{"title":"Properties of Edge","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/properties/EdgeProperties"},"frontmatter":{"title":"边属性","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/cases/relations"},"frontmatter":{"title":"Relationship Analysis Powered by G6","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/cases/relations"},"frontmatter":{"title":"基于 G6 的图分析应用","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/states/bindEvent"},"frontmatter":{"title":"Listener and Event","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/bindEvent"},"frontmatter":{"title":"监听和绑定事件","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/updateElement"},"frontmatter":{"title":"如何更新节点或边的样式","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/updateElement"},"frontmatter":{"title":"Update Item's Style","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/graphics-group"},"frontmatter":{"title":"Key Concept - Graphics Group","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/graphics-group"},"frontmatter":{"title":"关键概念-图形分组 Group","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/circle"},"frontmatter":{"title":"Circle","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/circle"},"frontmatter":{"title":"Circle","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/line"},"frontmatter":{"title":"Line","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/line"},"frontmatter":{"title":"Line","order":1}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/example"},"frontmatter":{"title":"Render the Tutorial Demo","order":1}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/example"},"frontmatter":{"title":"绘制 Tutorial 案例","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/layout/Graph"},"frontmatter":{"title":"Graph Layout","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/Graph"},"frontmatter":{"title":"Graph","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/Graph"},"frontmatter":{"title":"Graph","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/layout/Graph"},"frontmatter":{"title":"Graph Layout","order":1}}},{"node":{"fields":{"slug":"/zh/examples/shape/defaultEdges"},"frontmatter":{"title":"内置边","order":1}}},{"node":{"fields":{"slug":"/en/examples/shape/defaultEdges"},"frontmatter":{"title":"Built-in Edges","order":1}}},{"node":{"fields":{"slug":"/en/examples/tree/dendrogram"},"frontmatter":{"title":"Dendrogram","order":1}}},{"node":{"fields":{"slug":"/zh/examples/tree/dendrogram"},"frontmatter":{"title":"生态树","order":1}}},{"node":{"fields":{"slug":"/en/examples/scatter/edge"},"frontmatter":{"title":"Edge Animation","order":1}}},{"node":{"fields":{"slug":"/zh/examples/scatter/edge"},"frontmatter":{"title":"边动画","order":1}}},{"node":{"fields":{"slug":"/zh/examples/interaction/loadData"},"frontmatter":{"title":"动态加载多条数据","order":1}}},{"node":{"fields":{"slug":"/en/examples/interaction/loadData"},"frontmatter":{"title":"Onload Multiple Data","order":1}}},{"node":{"fields":{"slug":"/en/examples/case/simplifyCluster"},"frontmatter":{"title":"Collapse/Expand Cluster","order":1}}},{"node":{"fields":{"slug":"/zh/examples/case/simplifyCluster"},"frontmatter":{"title":"聚类的折叠/扩展","order":1}}},{"node":{"fields":{"slug":"/en/examples/net/dagreFlow"},"frontmatter":{"title":"Dagre Layout","order":1}}},{"node":{"fields":{"slug":"/zh/examples/net/dagreFlow"},"frontmatter":{"title":"Dagre 流程图布局","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/properties/TextProperties"},"frontmatter":{"title":"Attributes of Text","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/properties/TextProperties"},"frontmatter":{"title":"Properties of Text","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/rect"},"frontmatter":{"title":"Rect","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/rect"},"frontmatter":{"title":"Rect","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/polyline"},"frontmatter":{"title":"Polyline","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/polyline"},"frontmatter":{"title":"Polyline","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/TreeGraph"},"frontmatter":{"title":"TreeGraph","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/TreeGraph"},"frontmatter":{"title":"TreeGraph","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/elements"},"frontmatter":{"title":"Configure the Items","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/elements"},"frontmatter":{"title":"元素及其配置","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/layout/TreeGraph"},"frontmatter":{"title":"TreeGraph","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/cases/edgeBundling"},"frontmatter":{"title":"Edge Bundling","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/cases/edgeBundling"},"frontmatter":{"title":"Edge Bundling","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/layout/TreeGraph"},"frontmatter":{"title":"TreeGraph","order":2}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-node"},"frontmatter":{"title":"Custom Node","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/custom-node"},"frontmatter":{"title":"自定义节点","order":2}}},{"node":{"fields":{"slug":"/zh/examples/tree/mindmap"},"frontmatter":{"title":"脑图树","order":2}}},{"node":{"fields":{"slug":"/en/examples/tree/mindmap"},"frontmatter":{"title":"Mindmap","order":2}}},{"node":{"fields":{"slug":"/en/examples/shape/customNode"},"frontmatter":{"title":"Custom Node","order":2}}},{"node":{"fields":{"slug":"/zh/examples/shape/customNode"},"frontmatter":{"title":"自定义节点","order":2}}},{"node":{"fields":{"slug":"/zh/examples/scatter/stateChange"},"frontmatter":{"title":"状态切换","order":2}}},{"node":{"fields":{"slug":"/en/examples/scatter/stateChange"},"frontmatter":{"title":"State Switch","order":2}}},{"node":{"fields":{"slug":"/en/examples/case/customFlow"},"frontmatter":{"title":"Custom Fow Graph","order":2}}},{"node":{"fields":{"slug":"/zh/examples/case/customFlow"},"frontmatter":{"title":"自定义流向图","order":2}}},{"node":{"fields":{"slug":"/en/examples/interaction/label"},"frontmatter":{"title":"Label and Background Updating","order":2}}},{"node":{"fields":{"slug":"/zh/examples/interaction/label"},"frontmatter":{"title":"改变标签或背景","order":2}}},{"node":{"fields":{"slug":"/zh/examples/net/furchtermanLayout"},"frontmatter":{"title":"Fruchterman 图布局","order":2}}},{"node":{"fields":{"slug":"/en/examples/net/furchtermanLayout"},"frontmatter":{"title":"Fruchterman Layout","order":2}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/layout"},"frontmatter":{"title":"使用图布局 Layout","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/layout"},"frontmatter":{"title":"Utilize Layout","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/supportIE"},"frontmatter":{"title":"如何让 IE 支持 G6","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/supportIE"},"frontmatter":{"title":"Use G6 with IE","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-edge"},"frontmatter":{"title":"Custom Edge","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/custom-edge"},"frontmatter":{"title":"自定义边","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/ellipse"},"frontmatter":{"title":"Ellipse","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/ellipse"},"frontmatter":{"title":"Ellipse","order":3}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/quaratic"},"frontmatter":{"title":"Quadratic","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/quaratic"},"frontmatter":{"title":"Quadratic","order":3}}},{"node":{"fields":{"slug":"/en/examples/tree/indented"},"frontmatter":{"title":"Indented","order":3}}},{"node":{"fields":{"slug":"/zh/examples/tree/indented"},"frontmatter":{"title":"缩进树","order":3}}},{"node":{"fields":{"slug":"/en/examples/shape/customEdge"},"frontmatter":{"title":"Custom Edge","order":3}}},{"node":{"fields":{"slug":"/zh/examples/shape/customEdge"},"frontmatter":{"title":"自定义边","order":3}}},{"node":{"fields":{"slug":"/zh/examples/net/radialLayout"},"frontmatter":{"title":"Radial 辐射布局","order":3}}},{"node":{"fields":{"slug":"/en/examples/net/radialLayout"},"frontmatter":{"title":"Radial Layout","order":3}}},{"node":{"fields":{"slug":"/en/examples/interaction/nodeGroup"},"frontmatter":{"title":"Node Group","order":3}}},{"node":{"fields":{"slug":"/zh/examples/interaction/nodeGroup"},"frontmatter":{"title":"节点分组","order":3}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/elementIndex"},"frontmatter":{"title":"The Visual Level of Node and Edge","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/elementIndex"},"frontmatter":{"title":"节点与边的层级","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/multi-line"},"frontmatter":{"title":"使用 G6 让两个节点之间连多条边","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/multi-line"},"frontmatter":{"title":"使用 G6 让两个节点之间连多条边","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/label-properties"},"frontmatter":{"title":"The Text Property","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/label-properties"},"frontmatter":{"title":"文本属性","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/diamond"},"frontmatter":{"title":"Diamond","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/diamond"},"frontmatter":{"title":"Diamond","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/cubic"},"frontmatter":{"title":"Cubic","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/cubic"},"frontmatter":{"title":"Cubic","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/behavior"},"frontmatter":{"title":"图的交互 Behavior","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/behavior"},"frontmatter":{"title":"Interaction Behavior","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/states/defaultBehavior"},"frontmatter":{"title":"Built-in Behavior","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/defaultBehavior"},"frontmatter":{"title":"内置的 Behavior","order":4}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-layout"},"frontmatter":{"title":"Custom Layout","order":4}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/custom-layout"},"frontmatter":{"title":"自定义布局 Layout","order":4}}},{"node":{"fields":{"slug":"/zh/examples/tree/radialtree"},"frontmatter":{"title":"辐射树","order":4}}},{"node":{"fields":{"slug":"/en/examples/tree/radialtree"},"frontmatter":{"title":"Radial Tree","order":4}}},{"node":{"fields":{"slug":"/en/examples/shape/label"},"frontmatter":{"title":"Long Label","order":4}}},{"node":{"fields":{"slug":"/zh/examples/shape/label"},"frontmatter":{"title":"超长文本","order":4}}},{"node":{"fields":{"slug":"/zh/examples/interaction/partialResponse"},"frontmatter":{"title":"响应区域事件","order":4}}},{"node":{"fields":{"slug":"/en/examples/interaction/partialResponse"},"frontmatter":{"title":"Region Response","order":4}}},{"node":{"fields":{"slug":"/en/examples/net/circular"},"frontmatter":{"title":"Circular Layout","order":4}}},{"node":{"fields":{"slug":"/zh/examples/net/circular"},"frontmatter":{"title":"Circular 环形布局","order":4}}},{"node":{"fields":{"slug":"/zh/examples/scatter/changePosition"},"frontmatter":{"title":"改变节点位置","order":4}}},{"node":{"fields":{"slug":"/en/examples/scatter/changePosition"},"frontmatter":{"title":"Change Node Positions","order":4}}},{"node":{"fields":{"slug":"/zh/docs/api/Behavior"},"frontmatter":{"title":"Behavior","order":5}}},{"node":{"fields":{"slug":"/en/docs/api/Behavior"},"frontmatter":{"title":"Behavior","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/plugins"},"frontmatter":{"title":"插件与工具","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/plugins"},"frontmatter":{"title":"Plugins and Tools","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edgeVisible"},"frontmatter":{"title":"The Visibility","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edgeVisible"},"frontmatter":{"title":"显示与隐藏","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/states/mode"},"frontmatter":{"title":"Interaction Mode","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/mode"},"frontmatter":{"title":"交互模式 Mode","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/build-error"},"frontmatter":{"title":"Build 报错","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/build-error"},"frontmatter":{"title":"Build 报错","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/custom-behavior"},"frontmatter":{"title":"自定义交互 Behavior","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-behavior"},"frontmatter":{"title":"Custom Behavior","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/triangle"},"frontmatter":{"title":"Triangle","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/triangle"},"frontmatter":{"title":"Triangle","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/arc"},"frontmatter":{"title":"Arc","order":5}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/arc"},"frontmatter":{"title":"Arc","order":5}}},{"node":{"fields":{"slug":"/zh/examples/tree/customItemTree"},"frontmatter":{"title":"定制树图元素样式","order":5}}},{"node":{"fields":{"slug":"/en/examples/tree/customItemTree"},"frontmatter":{"title":"Custom Tree Items","order":5}}},{"node":{"fields":{"slug":"/en/examples/scatter/customAnimate"},"frontmatter":{"title":"Custom Animation","order":5}}},{"node":{"fields":{"slug":"/zh/examples/scatter/customAnimate"},"frontmatter":{"title":"自定义动画","order":5}}},{"node":{"fields":{"slug":"/en/examples/interaction/position"},"frontmatter":{"title":"Move Nodes","order":5}}},{"node":{"fields":{"slug":"/zh/examples/interaction/position"},"frontmatter":{"title":"移动位置","order":5}}},{"node":{"fields":{"slug":"/zh/examples/net/gridLayout"},"frontmatter":{"title":"Grid 网格布局","order":5}}},{"node":{"fields":{"slug":"/en/examples/net/gridLayout"},"frontmatter":{"title":"Grid","order":5}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/animation"},"frontmatter":{"title":"动画（选读）","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/animation"},"frontmatter":{"title":"Animation*","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/states/state"},"frontmatter":{"title":"State","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/states/state"},"frontmatter":{"title":"状态 State","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/FAQ/front-edge"},"frontmatter":{"title":"如何设置 Edge 前置","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/FAQ/front-edge"},"frontmatter":{"title":"如何设置 Edge 前置","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/star"},"frontmatter":{"title":"Star","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/star"},"frontmatter":{"title":"Star","order":6}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/edges/loop"},"frontmatter":{"title":"Loop","order":6}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/edges/loop"},"frontmatter":{"title":"Loop","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/Event"},"frontmatter":{"title":"Event","order":6}}},{"node":{"fields":{"slug":"/zh/docs/api/Event"},"frontmatter":{"title":"Event","order":6}}},{"node":{"fields":{"slug":"/en/examples/net/concentricLayout"},"frontmatter":{"title":"Concentric Layout","order":6}}},{"node":{"fields":{"slug":"/zh/examples/net/concentricLayout"},"frontmatter":{"title":"Concentric 同心圆布局","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/Shape"},"frontmatter":{"title":"Shape","order":7}}},{"node":{"fields":{"slug":"/zh/docs/api/Shape"},"frontmatter":{"title":"Shape","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/tutorial/epilog"},"frontmatter":{"title":"Conclusion","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/tutorial/epilog"},"frontmatter":{"title":"结语","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/mode-and-custom-behavior"},"frontmatter":{"title":"Interaction Mode","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/mode-and-custom-behavior"},"frontmatter":{"title":"交互模式 Mode","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/image"},"frontmatter":{"title":"Image","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/image"},"frontmatter":{"title":"Image","order":7}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/layout"},"frontmatter":{"title":"使用布局 Layout","order":7}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/layout"},"frontmatter":{"title":"Utilizing Layout","order":7}}},{"node":{"fields":{"slug":"/en/examples/net/mdsLayout"},"frontmatter":{"title":"MDS Layout","order":7}}},{"node":{"fields":{"slug":"/zh/examples/net/mdsLayout"},"frontmatter":{"title":"MDS 布局","order":7}}},{"node":{"fields":{"slug":"/zh/docs/api/Group"},"frontmatter":{"title":"Graphics Group","order":8}}},{"node":{"fields":{"slug":"/en/docs/api/Group"},"frontmatter":{"title":"Graphics Group","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/nodeGroup"},"frontmatter":{"title":"Node Group","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/nodeGroup"},"frontmatter":{"title":"节点分组 Group","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/create-node-group"},"frontmatter":{"title":"Create Node Group","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/create-node-group"},"frontmatter":{"title":"手动创建节点分组 Group","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/animation"},"frontmatter":{"title":"Basic Animation","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/animation"},"frontmatter":{"title":"基础动画","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/elements/nodes/modelRect"},"frontmatter":{"title":"ModelRect","order":8}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/modelRect"},"frontmatter":{"title":"ModelRect","order":8}}},{"node":{"fields":{"slug":"/zh/examples/net/arcDiagram"},"frontmatter":{"title":"Arc Diagram 弧线图","order":8}}},{"node":{"fields":{"slug":"/en/examples/net/arcDiagram"},"frontmatter":{"title":"Arc Diagram","order":8}}},{"node":{"fields":{"slug":"/zh/docs/manual/middle/g6InReact"},"frontmatter":{"title":"React 中使用 G6","order":9}}},{"node":{"fields":{"slug":"/en/docs/manual/middle/g6InReact"},"frontmatter":{"title":"G6 in React","order":9}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/iconfont"},"frontmatter":{"title":"Utilize Iconfont","order":9}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/iconfont"},"frontmatter":{"title":"使用 Iconfont","order":9}}},{"node":{"fields":{"slug":"/en/docs/manual/advanced/lock-node"},"frontmatter":{"title":"Lock Node","order":10}}},{"node":{"fields":{"slug":"/zh/docs/manual/advanced/lock-node"},"frontmatter":{"title":"Lock Node","order":10}}},{"node":{"fields":{"slug":"/zh/docs/api/Custom"},"frontmatter":{"title":"自定义机制","order":10}}},{"node":{"fields":{"slug":"/en/docs/api/Custom"},"frontmatter":{"title":"Custom Mechanism","order":10}}},{"node":{"fields":{"slug":"/en/examples/net/layoutMechanism"},"frontmatter":{"title":"Layout Mechanism","order":19}}},{"node":{"fields":{"slug":"/zh/examples/net/layoutMechanism"},"frontmatter":{"title":"布局机制","order":19}}},{"node":{"fields":{"slug":"/zh/examples/tree/radialtree/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/radialtree/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/mindmap/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/indented/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/mindmap/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/indented/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/dendrogram/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/dendrogram/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/tree/compactBox/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/tree/compactBox/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/mdsLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/mdsLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/radialLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/radialLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/gridLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/gridLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/furchtermanLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/furchtermanLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/forceDirected/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/forceDirected/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/concentricLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/concentricLayout/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/dagreFlow/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/dagreFlow/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/en/examples/net/circular/API"},"frontmatter":{"title":"API","order":null}}},{"node":{"fields":{"slug":"/zh/examples/net/circular/API"},"frontmatter":{"title":"API","order":null}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"prev":{"node":{"fields":{"slug":"/en/docs/manual/advanced/custom-node"},"frontmatter":{"title":"Custom Node","order":2},"html":"<p>G6 provides abundant <a href=\"/en/docs/manual/middle/elements/defaultNode\">Built-in Nodes</a>, including <a href=\"/en/docs/manual/middle/elements/nodes/circle\">circle</a>, <a href=\"https://www.yuque.com/antv/g6/vdqpdt\" target=\"_self\" rel=\"nofollow\">rect</a>, <a href=\"/en/docs/manual/middle/elements/nodes/ellipse\">ellipse</a>, <a href=\"/en/docs/manual/middle/elements/nodes/diamond\">diamond</a>, <a href=\"/en/docs/manual/middle/elements/nodes/triangle\">triangle</a>, <a href=\"/en/docs/manual/middle/elements/nodes/star\">star</a>, <a href=\"/en/docs/manual/middle/elements/nodes/image\">image</a>, <a href=\"/en/docs/manual/middle/elements/nodes/modelRect\">modelRect</a>. Besides, the custom machanism allows the users to design their own type of nodes by <code class=\"language-text\">G6.registerNode(&#39;nodeName&#39;, options)</code>. A node with complex graphics shapes, complex interactions, fantastic animations can be implemented easily.</p>\n<p>In this document, we will introduce the custom enodeby four examples:\n<br />1. Register a bran-new edge;\n<br />2. Register an edge by extending a built-in edge;\n<br />3. Register an edge with interactions and styles;\n<br />4. Register an edge with custom arrow.</p>\n<br />\n<strong>1. Register a bran-new node: </strong>Draw the graphics; Optimize the performance.\n<br />\n<strong>2. Register a node by extending a built-in node: </strong>Add extra graphics shape; Add animation.\n<br />\n<strong>3. Adjust the anchorPoints(link points);</strong>\n<br />\n<strong>4. Register a node with state styles: </strong>Response the states change by styles and animations\n<p>As stated in <a href=\"/en/docs/manual/middle/keyConcept\">Shape</a>, there are two points should be satisfied when customize a node:</p>\n<ul>\n<li>Controll the life cycle of the node;</li>\n<li>Analyze the input data and show it by graphics.</li>\n</ul>\n<p>The API of cumstom node:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerNode</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'nodeName'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      stateStyles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        hover<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        selected<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/**\n     * Draw the node with label\n     * @param  {Object} cfg The configurations of the node\n     * @param  {G.Group} group The container of the node\n     * @return {G.Shape} The keyShape of the node. It can be obtained by node.get('keyShape')\n     */</span>\n    <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg<span class=\"token punctuation\">,</span> group</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/**\n     * The extra operations after drawing the node. There is no operation in this function by default\n     * @param  {Object} cfg The configurations of the node\n     * @param  {G.Group} group The container of the node\n     */</span>\n    <span class=\"token function\">afterDraw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg<span class=\"token punctuation\">,</span> group</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/**\n     * Update the node and its label\n     * @override\n     * @param  {Object} cfg The configurations of the node\n     * @param  {Node} node The node item\n     */</span>\n    <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg<span class=\"token punctuation\">,</span> node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/**\n     * The operations after updating the node. It is combined with afterDraw generally\n     * @override\n     * @param  {Object} cfg The configurations of the node\n     * @param  {Node} node The node item\n     */</span>\n    <span class=\"token function\">afterUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg<span class=\"token punctuation\">,</span> node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/**\n     * Response the node states change. Mainly the interaction states. The business states should be handled in the draw function\n     * The states 'selected' and 'active' will be responsed on keyShape by default. To response more states, implement this function.\n     * @param  {String} name The name of the state\n     * @param  {Object} value The value of the state\n     * @param  {Node} node The node item\n     */</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/**\n     * Get the anchorPoints(link points for related edges)\n     * @param  {Object} cfg The configurations of the node\n     * @return {Array|null} The array of anchorPoints(link points for related edges). Null means there are no anchorPoints\n     */</span>\n    <span class=\"token function\">getAnchorPoints</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  extendNodeName<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><span style=\"background-color: rgb(251, 233, 231); color: rgb(139, 53, 56)\">   ⚠️<strong>Attention:</strong> </span></p>\n<ul>\n<li><code class=\"language-text\">draw</code> is required if the custom node does not extend any parent;</li>\n<li><code class=\"language-text\">update</code> is not required. If it is undefined, the <code class=\"language-text\">draw</code> will be called when updating the node, which means all the graphics will be cleared and repaint;</li>\n<li><code class=\"language-text\">afterDraw</code> and <code class=\"language-text\">afterUpdate</code> are used for extending the exited nodes in general. e.g. adding extra image on rect node, adding animation on a circle node, ...;</li>\n<li>In general, <code class=\"language-text\">setState</code> is not required;</li>\n<li><code class=\"language-text\">getAnchorPoints</code> is only required when you want to contrain the link points for nodes and their related edges. The anchorPoints can be assigned in the node data as well.</li>\n</ul>\n<h2 id=\"1-register-a-bran-new-edge\"><a href=\"#1-register-a-bran-new-edge\" aria-label=\"1 register a bran new edge permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Register a Bran-new Edge</h2>\n<h3 id=\"render-the-node\"><a href=\"#render-the-node\" aria-label=\"render the node permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Render the Node</h3>\n<p>Now, we are going to register a diamond node:</p>\n<blockquote>\n<p>Although there is a built-in diamond node in G6, we implement it here to rewrite it for demonstration.</p>\n</blockquote>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*LqFCRaKyr0gAAAAAAAAAAABkARQnAQ' alt='img' width='80'/>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">'diamond'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg<span class=\"token punctuation\">,</span> group</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// If there is style object in cfg, it should be mixed here</span>\n    <span class=\"token keyword\">const</span> shape <span class=\"token operator\">=</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      attrs<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span>cfg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Get the path by cfg</span>\n        stroke<span class=\"token punctuation\">:</span> cfg<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span> <span class=\"token comment\">// Apply the color to the stroke. For filling, use fill: cfg.color instead</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cfg<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// If the label exists</span>\n      <span class=\"token comment\">// The complex label configurations can be defined by labeCfg</span>\n      <span class=\"token comment\">// const style = (cfg.labelCfg &amp;&amp; cfg.labelCfg.style) || {};</span>\n      <span class=\"token comment\">// style.text = cfg.label;</span>\n      group<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// attrs: style</span>\n        attrs<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          x<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// center</span>\n          y<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          textAlign<span class=\"token punctuation\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n          textBaseline<span class=\"token punctuation\">:</span> <span class=\"token string\">'middle'</span><span class=\"token punctuation\">,</span>\n          text<span class=\"token punctuation\">:</span> cfg<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">,</span>\n          fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'#666'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> shape<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Return the path of a diamond</span>\n  <span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> cfg<span class=\"token punctuation\">.</span>size <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span> size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//  / 1 \\</span>\n    <span class=\"token comment\">// 4     2</span>\n    <span class=\"token comment\">//  \\ 3 /</span>\n    <span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">[</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token operator\">-</span> height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Top</span>\n      <span class=\"token punctuation\">[</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span> width <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Right</span>\n      <span class=\"token punctuation\">[</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Bottom</span>\n      <span class=\"token punctuation\">[</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>width <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Left</span>\n      <span class=\"token punctuation\">[</span><span class=\"token string\">'Z'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Close the path</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> path<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>We have registered a dimond node. The following code use the diamond node:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'diamond'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The simplest form</span>\n    <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'diamond'</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Add the size</span>\n    <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">250</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'diamond'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Add the color</span>\n    <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">350</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">:</span> <span class=\"token string\">'菱形'</span><span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'diamond'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Add the label</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token punctuation\">:</span> <span class=\"token string\">'mountNode'</span><span class=\"token punctuation\">,</span>\n  width<span class=\"token punctuation\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token punctuation\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*qv88SrrnmFAAAAAAAAAAAABkARQnAQ' alt='img' width='300'/>\n<h3 id=\"optimize-the-performance\"><a href=\"#optimize-the-performance\" aria-label=\"optimize the performance permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Optimize the Performance</h3>\n<p>When the nodes or edges are updated by <code class=\"language-text\">graph.update(item, cfg)</code>, the <code class=\"language-text\">draw</code> will be called for repainting. But in the situation with large amount of data (especially the text), repainting all the graphics shapes by <code class=\"language-text\">draw</code> has bad performance. </p>\n<p>Therefore, rewrite the <code class=\"language-text\">update</code> function when registering a node for partial repainting is necessary. We can repaint some of the graphics shapes instead of all the graphis by <code class=\"language-text\">update</code>. The <code class=\"language-text\">update</code> is not required if you have no performance problem.</p>\n<p>To update a few graphics shapes of a node in <code class=\"language-text\">update</code>, you need find the graphics shapes to be updated frist:</p>\n<ul>\n<li>Find the <a href=\"/en/docs/manual/middle/keyConcept\">keyShape</a> by <code class=\"language-text\">group.get(&#39;children&#39;)[0]</code>, which is the return value of <code class=\"language-text\">draw</code>;</li>\n<li>Find the graphics shape of label by <code class=\"language-text\">group.get(&#39;children&#39;)[1]</code>.</li>\n</ul>\n<p>The code shown below update the path and the color of the keyShape of the diamond:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">'diamond'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg<span class=\"token punctuation\">,</span> group</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ... // Same as the code above</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ... // Same as the code above</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg<span class=\"token punctuation\">,</span> node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> group <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">getContainer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Get the container of the node</span>\n    <span class=\"token keyword\">const</span> shape <span class=\"token operator\">=</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'children'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Find the first graphics shape of the node. It is determined by the order of being added</span>\n    <span class=\"token keyword\">const</span> style <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span>cfg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      stroke<span class=\"token punctuation\">:</span> cfg<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    shape<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Update</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"2-extend-a-built-in-node\"><a href=\"#2-extend-a-built-in-node\" aria-label=\"2 extend a built in node permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Extend a Built-in Node</h2>\n<h3 id=\"extend-the-shape\"><a href=\"#extend-the-shape\" aria-label=\"extend the shape permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extend the Shape</h3>\n<p>There are several <a href=\"/en/docs/manual/middle/elements/defaultNode\">Built-in Nodes</a> in G6. You can extend them to make some modification on them. It is similar to register the diamond node. <a href=\"https://github.com/antvis/g6/blob/master/src/shape/single-shape-mixin.js\" target=\"_self\" rel=\"nofollow\">simple-shape</a> is the base class of all the graphics shape, you can also extend it.</p>\n<p>For example, we are going to extend the single-shape. <code class=\"language-text\">draw</code>, <code class=\"language-text\">update</code>, and <code class=\"language-text\">setState</code> have been implemented in the <a href=\"https://github.com/antvis/g6/blob/master/src/shape/single-shape-mixin.js\" target=\"_self\" rel=\"nofollow\">simple-shape</a>. Thus, we only rewrite the <code class=\"language-text\">getShapeStyle</code>, which returns the path and the styles of graphics shapes.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerNode</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'diamond'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    shapeType<span class=\"token punctuation\">:</span> <span class=\"token string\">'path'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// It is required when group.addShape</span>\n    <span class=\"token function\">getShapeStyle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span>cfg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// translate to [width, height]</span>\n      <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> cfg<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span> size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//  / 1 \\</span>\n      <span class=\"token comment\">// 4     2</span>\n      <span class=\"token comment\">//  \\ 3 /</span>\n      <span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token operator\">-</span> height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Top</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span> width <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Right</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Bottom</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>width <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Left</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'Z'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Close the path</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> style <span class=\"token operator\">=</span> Util<span class=\"token punctuation\">.</span><span class=\"token function\">mix</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">,</span>\n          stroke<span class=\"token punctuation\">:</span> color<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        cfg<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> style<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Extend the 'single-shape'</span>\n  <span class=\"token string\">'single-shape'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3 id=\"add-animation\"><a href=\"#add-animation\" aria-label=\"add animation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add Animation</h3>\n<p>We are going to add animation by <code class=\"language-text\">afterDraw</code> in this section. The result:<br />\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*ga7FQLdUYjkAAAAAAAAAAABkARQnAQ' alt='img' width='350'/></p>\n<ul>\n<li>Extend the built-in rect node, and add a graphics shape in the rect;</li>\n<li>\n<p>Execute the animation repeatly.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Register a type of custom node named inner-animate</span>\n<span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerNode</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'inner-animate'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">afterDraw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cfg<span class=\"token punctuation\">,</span> group</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> cfg<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span> size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Add an image shape</span>\n      <span class=\"token keyword\">const</span> image <span class=\"token operator\">=</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        attrs<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          x<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>width <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n          y<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n          width<span class=\"token punctuation\">:</span> width<span class=\"token punctuation\">,</span>\n          height<span class=\"token punctuation\">:</span> height<span class=\"token punctuation\">,</span>\n          img<span class=\"token punctuation\">:</span> cfg<span class=\"token punctuation\">.</span>img<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Execute the animation</span>\n      image<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">onFrame</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ratio</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> matrix <span class=\"token operator\">=</span> Util<span class=\"token punctuation\">.</span>mat3<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> toMatrix <span class=\"token operator\">=</span> Util<span class=\"token punctuation\">.</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">[</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> ratio <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n              matrix<span class=\"token punctuation\">:</span> toMatrix<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          repeat<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'easeCubic'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Extend the rect node</span>\n  <span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n</ul>\n<p>For more information about animation, please refer to <a href=\"/en/docs/manual/advanced/animation\">Basic Ainmation</a>.</p>\n<br />\n<h2 id=\"3-adjust-the-anchorpoint\"><a href=\"#3-adjust-the-anchorpoint\" aria-label=\"3 adjust the anchorpoint permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Adjust the anchorPoint</h2>\n<p>The <a href=\"/en/docs/manual/middle/keyConcept\">anchorPoint</a> of a node is <strong>the intersection of the node and its related edges</strong>.<br /></p>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*mJ85Q5WRJLwAAAAAAAAAAABkARQnAQ' alt='img' width='200'/>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*99aSR5zbd44AAAAAAAAAAABkARQnAQ' alt='img' width='200'/>\n<blockquote>\n<p>(Left) The diamond node has no anchorPoints. (Right) The diamond node has anchorPoints.</p>\n</blockquote>\n<p>There are two ways to adjust the anchorPoints of the node:</p>\n<ul>\n<li>Configure the <code class=\"language-text\">anchorPoints</code> in the data.</li>\n</ul>\n<p>      <strong>Applicable Scene:</strong> Assign different anchorPoints for different nodes.</p>\n<ul>\n<li>Assign <code class=\"language-text\">getAnchorPoints</code> when registering a custom node.</li>\n</ul>\n<p>      <strong>Applicable Scene:</strong> Configure the anchorPoints globally for this type of node.</p>\n<h3 id=\"configure-the-anchorpoints-in-data\"><a href=\"#configure-the-anchorpoints-in-data\" aria-label=\"configure the anchorpoints in data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure the anchorPoints in Data</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token string\">'node1'</span><span class=\"token punctuation\">,</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      anchorPoints<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The center of the left border</span>\n        <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The center of the right border</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">//...       // Other nodes</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  edges<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">//... // Other edges</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3 id=\"assign-anchorpoints-when-registering-node\"><a href=\"#assign-anchorpoints-when-registering-node\" aria-label=\"assign anchorpoints when registering node permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assign anchorPoints When Registering Node</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerNode</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'diamond'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//... // Other functions</span>\n    <span class=\"token function\">getAnchorPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The center of the left border</span>\n        <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The center of the right border</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"4-register-node-with-state-styles\"><a href=\"#4-register-node-with-state-styles\" aria-label=\"4 register node with state styles permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Register Node with State Styles</h2>\n<p>In general, nodes and edges should response the states change by styles chaging. For example, highlight the node or edge clicked/hovered by user. We can achieve it by two ways:</p>\n<ol>\n<li>Add a flag on the node data, control the style according to the flag in <code class=\"language-text\">draw</code> when registering a custom node;</li>\n<li>Separate the interactive states from source data and <code class=\"language-text\">draw</code>, update the node only.</li>\n</ol>\n<p>We recommend adjust the state styles by the the second way, which can be achieved by:</p>\n<ul>\n<li>Response the states in <code class=\"language-text\">setState</code> function when registering a node/edge;</li>\n<li>Set/change the state by <code class=\"language-text\">graph.setItemState()</code>.</li>\n</ul>\n<p>Based on rect node, we extend a custom node with white filling. It will be turned to red when the mouse clicks it. Implement it by the code below:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Extend rect</span>\n<span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerNode</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'custom'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Response the states</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> group <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">getContainer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> shape <span class=\"token operator\">=</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'children'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Find the first graphics shape of the node. It is determined by the order of being added</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'selected'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          shape<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fill'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          shape<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fill'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Click to select, cancel by clicking again</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">ev</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span>\n  graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token string\">'selected'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">hasState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'selected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Switch the selected state</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>G6 does not limit the states for nodes/edges, you can assign any states to a node once you response it in the <code class=\"language-text\">setState</code> function. e.g. magnify the node by hovering:<br />\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*JhhTSJ8PMbYAAAAAAAAAAABkARQnAQ' alt='img' width='350'/></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">G6</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerNode</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'custom'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Response the states change</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> group <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">getContainer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> shape <span class=\"token operator\">=</span> group<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'children'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Find the first graphics shape of the node. It is determined by the order of being added</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'running'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          shape<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\n            <span class=\"token punctuation\">{</span>\n              r<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n              repeat<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          shape<span class=\"token punctuation\">.</span><span class=\"token function\">stopAnimate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          shape<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'circle'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Activate 'running' by mouse entering. Turn it of by mouse leaving.</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:mouseenter'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">ev</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span>\n  graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token string\">'running'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:mouseleave'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">ev</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">;</span>\n  graph<span class=\"token punctuation\">.</span><span class=\"token function\">setItemState</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token string\">'running'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},"next":{"node":{"fields":{"slug":"/en/docs/manual/middle/elements/nodes/defaultNode"},"frontmatter":{"title":"Built-in Nodes","order":0},"html":"<p>The built-in nodes in G6 include circle, rect, ellipse, diamond, triangle, star, image, and modelRect. <br />\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*FY3RTbDCz_8AAAAAAAAAAABkARQnAQ' width='750' height='100'></p>\n<h2 id=\"types-of-default-nodes\"><a href=\"#types-of-default-nodes\" aria-label=\"types of default nodes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Types of Default Nodes</h2>\n<p>The table below shows the built-in nodes and their special attributes:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>circle</td>\n<td>Circle node: <br />- <code class=\"language-text\">size</code> is a number representing the diameter<br />- The circle is centered at the node position<br />- <code class=\"language-text\">color</code> takes effect on the stroke<br />- The label is placed on the center of the circle by default<br />- More attributes are described in <a href=\"/en/docs/manual/middle/elements/nodes/circle\">circle</a><br /></td>\n<td><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*H9TrTIiUEegAAAAAAAAAAABkARQnAQ' width=50/></td>\n</tr>\n<tr>\n<td>rect</td>\n<td>Rect node: <br />- <code class=\"language-text\">size</code> is an array, e.g. [100, 50]<br />- The rect in centered at the node position<br />- <code class=\"language-text\">color</code> takes effect on the stroke<br />- The label is placed on the center of the circle by default<br />-  More attributes are described in <a href=\"/zh/docs/manual/middle/elements/nodes/rect\">rect</a><br /></td>\n<td><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*SrlHQ5dcCoMAAAAAAAAAAABkARQnAQ' width=50/></td>\n</tr>\n<tr>\n<td>ellipse</td>\n<td>Ellipse node: <br />- <code class=\"language-text\">size</code> is an array, representing the lengths of major diameter and minor diameter<br />- The ellipse is centered at the node position<br />- <code class=\"language-text\">color</code> takes effect on the stroke<br />- The label is placed on the center of the circle by default<br />-  More attributes are described in <a href=\"/zh/docs/manual/middle/elements/nodes/ellipse\">ellipse</a><br /></td>\n<td><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*RjdlRbuocDIAAAAAAAAAAABkARQnAQ' width=50/></td>\n</tr>\n<tr>\n<td>diamond</td>\n<td>Diamond node: <br />- <code class=\"language-text\">size</code> is an array, representing the width and height of the diamond<br />- The diamond is centered on the node position<br />- <code class=\"language-text\">color</code> takes effect on the stroke<br />- The label is placed on the center of the circle by default<br />-  More attributes are described in <a href=\"/zh/docs/manual/middle/elements/nodes/diamond\">diamond</a><br /></td>\n<td><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*EjiPRJacFTEAAAAAAAAAAABkARQnAQ' width=50/></td>\n</tr>\n<tr>\n<td>triangle</td>\n<td>Triangle node: <br />- <code class=\"language-text\">size</code> is an array, representing the length of the base and the height of the triangle<br />- The triangle is centered on the node position<br />- <code class=\"language-text\">color</code> takes effect on the stroke<br />- he label lays on the bottom of the node by default<br />-  More attributes are described in <a href=\"/zh/docs/manual/middle/elements/nodes/triangle\">triangle</a><br /></td>\n<td><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*_HqXTadbhzAAAAAAAAAAAABkARQnAQ' width=50/></td>\n</tr>\n<tr>\n<td>star</td>\n<td>Star node: <br />- <code class=\"language-text\">size</code> is a number, representing the size of the star<br />- The star is centered on the node position<br />- <code class=\"language-text\">color</code> takes effect on the stroke<br />- The label is placed on the center of the circle by default<br />-  More attributes are described in <a href=\"/zh/docs/manual/middle/elements/nodes/star\">star</a><br /></td>\n<td><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*_euwQpARvhMAAAAAAAAAAABkARQnAQ' width=50/></td>\n</tr>\n<tr>\n<td>image</td>\n<td>Image node: <br />- <code class=\"language-text\">size</code> is an array, representing the width and the height of the image<br />- The image is centered on the node position<br />- <code class=\"language-text\">img</code> The url of the image. It can be assigned in <code class=\"language-text\">style</code> as well<br />- <code class=\"language-text\">color</code> does not take effect<br />- The label lays on the bottom of the node by default<br />-  More attributes are described in <a href=\"/zh/docs/manual/middle/elements/nodes/image\">image</a><br /></td>\n<td><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*gtNxQY2RvMwAAAAAAAAAAABkARQnAQ' width=50/></td>\n</tr>\n<tr>\n<td>modelRect</td>\n<td>Card node: <br />- <code class=\"language-text\">size</code> is an array, representing the width and the height of the card<br />- The modelRect is centered on the node position<br />- <code class=\"language-text\">color</code> takes effect on the stroke<br />- The label is placed on the center of the circle by default<br />- If <code class=\"language-text\">description</code> exists, it will lay below the label<br />-  More attributes are described in <a href=\"/zh/docs/manual/middle/elements/nodes/modelRect\">modelRect</a><br /></td>\n<td><img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*MqR9QKfimxUAAAAAAAAAAABkARQnAQ' width=100/><br /> <img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*9HKrSKtmNGQAAAAAAAAAAABkARQnAQ' width=100/></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"common-attribute\"><a href=\"#common-attribute\" aria-label=\"common attribute permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Common Attribute</h2>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Required</th>\n<th>Type</th>\n<th>Remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>true</td>\n<td>String</td>\n<td>The id of the node</td>\n</tr>\n<tr>\n<td>x</td>\n<td>false</td>\n<td>Number</td>\n<td>x coordinate</td>\n</tr>\n<tr>\n<td>y</td>\n<td>false</td>\n<td>Number</td>\n<td>y coordinate</td>\n</tr>\n<tr>\n<td>shape</td>\n<td>false</td>\n<td>String</td>\n<td>The shape of the node, <code class=\"language-text\">&#39;circle&#39;</code> by default</td>\n</tr>\n<tr>\n<td>size</td>\n<td>false</td>\n<td>Number / Array</td>\n<td>The size of the node</td>\n</tr>\n<tr>\n<td>anchorPoints</td>\n<td>false</td>\n<td>Array</td>\n<td>The interactions of the node and related edges. It can be null. <code class=\"language-text\">[0, 0]</code> represents the anchor on the left top; <code class=\"language-text\">[1, 1]</code>represents the anchor ont he right bottom</td>\n</tr>\n<tr>\n<td>style</td>\n<td>false</td>\n<td>Object</td>\n<td>The node style</td>\n</tr>\n<tr>\n<td>label</td>\n<td>false</td>\n<td>String</td>\n<td>The label text of the node</td>\n</tr>\n<tr>\n<td>labelCfg</td>\n<td>false</td>\n<td>Object</td>\n<td>The configurations of the label</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"style\"><a href=\"#style\" aria-label=\"style permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>style</h4>\n<p><code class=\"language-text\">style</code> is an object to configure the filling color, stroke color, shadow, and so on. Here is the commonly used attributes in <code class=\"language-text\">style</code>:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Required</th>\n<th>Type</th>\n<th>Remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fill</td>\n<td>false</td>\n<td>String</td>\n<td>The filling color</td>\n</tr>\n<tr>\n<td>stroke</td>\n<td>false</td>\n<td>String</td>\n<td>The stroke color</td>\n</tr>\n<tr>\n<td>lineWidth</td>\n<td>false</td>\n<td>Number</td>\n<td>The line width of the stroke</td>\n</tr>\n<tr>\n<td>shadowColor</td>\n<td>false</td>\n<td>String</td>\n<td>The shadow color</td>\n</tr>\n<tr>\n<td>shadowBlur</td>\n<td>false</td>\n<td>Number</td>\n<td>The blur of the shadow</td>\n</tr>\n<tr>\n<td>shadowOffsetX</td>\n<td>false</td>\n<td>Number</td>\n<td>The x offset of the shadow</td>\n</tr>\n<tr>\n<td>shadowOffsetX</td>\n<td>false</td>\n<td>Number</td>\n<td>The y offset of the shadow</td>\n</tr>\n<tr>\n<td>...</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>Configure <code class=\"language-text\">style</code> globally when instantiating the Graph:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token punctuation\">:</span> <span class=\"token string\">'mountNode'</span><span class=\"token punctuation\">,</span>\n  width<span class=\"token punctuation\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token punctuation\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n  defaultNode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ... Other attributes for nodes</span>\n    style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'#steelblue'</span><span class=\"token punctuation\">,</span>\n      stroke<span class=\"token punctuation\">:</span> <span class=\"token string\">'#eaff8f'</span><span class=\"token punctuation\">,</span>\n      lineWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// ... Other style attributes</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"label-and-labelcfg\"><a href=\"#label-and-labelcfg\" aria-label=\"label and labelcfg permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>label and labelCfg</h4>\n<p><code class=\"language-text\">label</code> is a string which indicates the content of the label. <br /><code class=\"language-text\">labelCfg</code> is an object to configure the label. The commonly used configurations of <code class=\"language-text\">labelCfg</code>:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Required</th>\n<th>Type</th>\n<th>Remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>position</td>\n<td>false</td>\n<td>String</td>\n<td>The relative positions to the node. Options:  <code class=\"language-text\">&#39;center&#39;</code>, <code class=\"language-text\">&#39;top&#39;</code>, <code class=\"language-text\">&#39;left&#39;</code>, <code class=\"language-text\">&#39;right&#39;</code>, <code class=\"language-text\">&#39;bottom&#39;</code>. <code class=\"language-text\">&#39;center&#39;</code> by default</td>\n</tr>\n<tr>\n<td>offset</td>\n<td>false</td>\n<td>Number / Array</td>\n<td>The offset of the label on the directions of <code class=\"language-text\">&#39;top&#39;</code>, <code class=\"language-text\">&#39;left&#39;</code>, <code class=\"language-text\">&#39;right&#39;</code>, <code class=\"language-text\">&#39;bottom&#39;</code></td>\n</tr>\n<tr>\n<td>style</td>\n<td>false</td>\n<td>Object</td>\n<td>The style attribute of the label</td>\n</tr>\n</tbody>\n</table>\n<p>The commonly used configurations for the <code class=\"language-text\">style</code> in the above table are:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Required</th>\n<th>Type</th>\n<th>Remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fill</td>\n<td>false</td>\n<td>String</td>\n<td>The color of the label</td>\n</tr>\n<tr>\n<td>stroke</td>\n<td>false</td>\n<td>String</td>\n<td>The stroke color of the label</td>\n</tr>\n<tr>\n<td>lineWidth</td>\n<td>false</td>\n<td>Number</td>\n<td>The line width of the label</td>\n</tr>\n<tr>\n<td>opacity</td>\n<td>false</td>\n<td>Number</td>\n<td>The opacity of the label</td>\n</tr>\n<tr>\n<td>font</td>\n<td>false</td>\n<td>String</td>\n<td>The font of the label</td>\n</tr>\n<tr>\n<td>fontSize</td>\n<td>false</td>\n<td>Number</td>\n<td>The font size of the label</td>\n</tr>\n<tr>\n<td>...</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>The following code shows how to configure <code class=\"language-text\">label</code> and <code class=\"language-text\">labelCfg</code> globally when instantiating a Graph:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token punctuation\">:</span> <span class=\"token string\">'mountNode'</span><span class=\"token punctuation\">,</span>\n  width<span class=\"token punctuation\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token punctuation\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n  defaultNode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ... Other attributes for nodes</span>\n    label<span class=\"token punctuation\">:</span> <span class=\"token string\">'node-label'</span><span class=\"token punctuation\">,</span>\n    labelCfg<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      position<span class=\"token punctuation\">:</span> <span class=\"token string\">'bottom'</span><span class=\"token punctuation\">,</span>\n      offset<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'#666'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"configure-nodes\"><a href=\"#configure-nodes\" aria-label=\"configure nodes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure Nodes</h2>\n<p>There are three methods to configure nodes: Configure nodes globally when instantiating a Graph; Configure nodes in their data; Configure nodes by <code class=\"language-text\">graph.node(nodeFn)</code>. Their priorities are: </p>\n<p><code class=\"language-text\">graph.node(nodeFn)</code> > Configure in data > Configure globally</p>\n<p>That means, if there are same configurations in different ways, the way with higher priority will take effect.</p>\n<h3 id=\"configure-globally-when-instantiating-graph\"><a href=\"#configure-globally-when-instantiating-graph\" aria-label=\"configure globally when instantiating graph permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure Globally When Instantiating Graph</h3>\n<p>Assign <code class=\"language-text\">defaultNode</code> to configure all the nodes globally:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token punctuation\">:</span> <span class=\"token string\">'mountNode'</span><span class=\"token punctuation\">,</span>\n  width<span class=\"token punctuation\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token punctuation\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n  defaultNode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'circle'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Other attributes for all the nodes</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3 id=\"configure-in-data\"><a href=\"#configure-in-data\" aria-label=\"configure in data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure in Data</h3>\n<p>To configure different nodes with different attributes, you can write the attributes into their data individually:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token string\">'node0'</span><span class=\"token punctuation\">,</span>\n      size<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// ...    // Other attributes for this node</span>\n      style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ...  // Style attributes for this node</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token string\">'node1'</span><span class=\"token punctuation\">,</span>\n      size<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'ellipse'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// ...    // Other attributes for this node</span>\n      style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ...  // Style attributes for this node</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ... // Other nodes</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  edges<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ... // edges</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3 id=\"configure-with-graphnodenodefn\"><a href=\"#configure-with-graphnodenodefn\" aria-label=\"configure with graphnodenodefn permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure with graph.node(nodeFn)</h3>\n<p>By this way, we can configure different nodes with different attributes.</p>\n<p><br />⚠️<strong>Attention:</strong> </p>\n<ul>\n<li><code class=\"language-text\">graph.node(nodeFn)</code> must be called <strong>before calling render()</strong>. It does not take effect otherwise;</li>\n<li>It has the highest priority that will rewrite the same attributes configured by other ways;</li>\n<li>Each node will be updated when adding or updating items. It will cost a lot when the amount of the data is large.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// const data = ...</span>\n<span class=\"token comment\">// const graph = ...</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    id<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n    shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span>\n    style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2 id=\"example\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nodes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'circle'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'circle'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'rect'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token string\">'node-ellipse'</span><span class=\"token punctuation\">,</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">330</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'ellipse'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'ellipse'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token string\">'node-diamond'</span><span class=\"token punctuation\">,</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">460</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'diamond'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'diamond'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token string\">'node-triangle'</span><span class=\"token punctuation\">,</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">560</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//size: 80,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'triangle'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'triangle'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token string\">'node-star'</span><span class=\"token punctuation\">,</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">660</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//size: [60, 30],</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'star'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'star'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">760</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      size<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span>\n      img<span class=\"token punctuation\">:</span>\n        <span class=\"token string\">'https://gw.alipayobjects.com/zos/rmsportal/XuVpGqBFxXplzvLjJBZB.svg'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token string\">'node-modelRect'</span><span class=\"token punctuation\">,</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">900</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'modelRect'</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token string\">'modelRect'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">G6<span class=\"token punctuation\">.</span>Graph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token punctuation\">:</span> <span class=\"token string\">'mountNode'</span><span class=\"token punctuation\">,</span>\n  width<span class=\"token punctuation\">:</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token punctuation\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngraph<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The result:\n<br />\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*6FzARrXBsUEAAAAAAAAAAABkARQnAQ' width='750' height='100'></p>\n<ul>\n<li>The label of the triangle and image node are layed on the bottom, and the others are layed on the center by default.</li>\n</ul>\n<h3 id=\"adjust-the-attributes\"><a href=\"#adjust-the-attributes\" aria-label=\"adjust the attributes permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adjust the Attributes</h3>\n<p>By writing the attributes into the data, we adjust the label position, color, and styles of the node with <code class=\"language-text\">&#39;node-ellipse&#39;</code> as its id. Replace the following code to the code about <code class=\"language-text\">&#39;node-ellipse&#39;</code>'s data to obtain the result.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token string\">'node-ellipse'</span><span class=\"token punctuation\">,</span>\n  x<span class=\"token punctuation\">:</span> <span class=\"token number\">330</span><span class=\"token punctuation\">,</span>\n  y<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  shape<span class=\"token punctuation\">:</span> <span class=\"token string\">'ellipse'</span><span class=\"token punctuation\">,</span>\t\n  size<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  label<span class=\"token punctuation\">:</span> <span class=\"token string\">'ellipse'</span><span class=\"token punctuation\">,</span>\n  labelCfg<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    position<span class=\"token punctuation\">:</span> <span class=\"token string\">'bottom'</span><span class=\"token punctuation\">,</span>\n    offset<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    fill<span class=\"token punctuation\">:</span> <span class=\"token string\">'#fa8c16'</span><span class=\"token punctuation\">,</span>\n    stroke<span class=\"token punctuation\">:</span> <span class=\"token string\">'#000'</span><span class=\"token punctuation\">,</span>\n    lineWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*fQ9yRYlo6zwAAAAAAAAAAABkARQnAQ' width='750' height='100'>\n<p>Then, we add some description for the node with <code class=\"language-text\">&#39;node-modelRect&#39;</code> as its <code class=\"language-text\">id</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  id: &#39;node-modelRect&#39;,\n  x: 900,\n  y: 100,\n  description: &#39;描述文本xxxxxxxxxxx&#39;,\n  shape: &#39;modelRect&#39;,\n  label: &#39;modelRect&#39;\n}</code></pre></div>\n<img src='https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*OnuCTYqfXKgAAAAAAAAAAABkARQnAQ' width='750' height='100'>\n<h2 id=\"related-reading\"><a href=\"#related-reading\" aria-label=\"related reading permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related Reading</h2>\n<ul>\n<li><a href=\"../../states/state\">State</a> —— Change the styles during the interaction process.</li>\n</ul>"}}}}}